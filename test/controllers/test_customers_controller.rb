# maxio_advanced_billing_formerly_chargify_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class CustomersControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    setup_class
    @controller = @client.customers
    @response_catcher = @controller.http_call_back
  end

  # You may create a new Customer at any time, or you may create a Customer at the same time you create a Subscription. The only validation restriction is that you may only create one customer for a given reference value.
  #
  #If provided, the `reference` value must be unique. It represents a unique identifier for the customer from your own app, i.e. the customer’s ID. This allows you to retrieve a given customer via a piece of shared information. Alternatively, you may choose to leave `reference` blank, and store Chargify’s unique ID for the customer, which is in the `id` attribute.
  #
  #Full documentation on how to locate, create and edit Customers in the Chargify UI can be located [here](https://chargify.zendesk.com/hc/en-us/articles/4407659914267).
  #
  ### Required Country Format
  #
  #Chargify requires that you use the ISO Standard Country codes when formatting country attribute of the customer.
  #
  #Countries should be formatted as 2 characters. For more information, please see the following wikipedia article on [ISO_3166-1.](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes)
  #
  ### Required State Format
  #
  #Chargify requires that you use the ISO Standard State codes when formatting state attribute of the customer.
  #
  #+ US States (2 characters): [ISO_3166-2](https://en.wikipedia.org/wiki/ISO_3166-2:US)
  #
  #+ States Outside the US (2-3 characters): To find the correct state codes outside of the US, please go to [ISO_3166-1](http://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) and click on the link in the “ISO 3166-2 codes” column next to country you wish to populate.
  #
  ### Locale
  #
  #Chargify allows you to attribute a language/region to your customer to deliver invoices in any required language.
  #For more: [Customer Locale](https://chargify.zendesk.com/hc/en-us/articles/4407870384283#customer-locale)
  def test_create_customer
    # Parameters for the API call
    body = CreateCustomerRequest.from_hash(APIHelper.json_deserialize(
      '{"customer":{"first_name":"Martha","last_name":"Washington","email":"ma'\
      'rtha@example.com","cc_emails":"george@example.com","organization":"ABC,'\
      ' Inc.","reference":"1234567890","address":"123 Main Street","address_2"'\
      ':"Unit 10","city":"Anytown","state":"MA","zip":"02120","country":"US","'\
      'phone":"555-555-1212","locale":"es-MX"}}', false))

    # Perform the API call through the SDK function
    result = @controller.create_customer(body: body)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"customer":{"first_name":"Cathryn","last_name":"Parisian","email":"Ste'\
      'lla.McLaughlin6@example.net","cc_emails":null,"organization":"Greenholt'\
      ' - Oberbrunner","reference":null,"id":76,"created_at":"2021-03-29T07:47'\
      ':00-04:00","updated_at":"2021-03-29T07:47:00-04:00","address":"739 Step'\
      'hon Bypass","address_2":"Apt. 386","city":"Sedrickchester","state":"KY"'\
      ',"state_name":"Kentucky","zip":"46979-7719","country":"US","country_nam'\
      'e":"United States","phone":"230-934-3685","verified":false,"portal_cust'\
      'omer_created_at":null,"portal_invite_last_sent_at":null,"portal_invite_'\
      'last_accepted_at":null,"tax_exempt":false,"vat_number":null,"parent_id"'\
      ':null,"locale":"en-US"}}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(ComparisonHelper.match_body(expected_body, received_body))
  end

  # This request will by default list all customers associated with your Site.
  #
  ### Find Customer
  #
  #Use the search feature with the `q` query parameter to retrieve an array of customers that matches the search query.
  #
  #Common use cases are:
  #
  #+ Search by an email
  #+ Search by a Chargify ID
  #+ Search by an organization
  #+ Search by a reference value from your application
  #+ Search by a first or last name
  #
  #To retrieve a single, exact match by reference, please use the [lookup endpoint](https://developers.chargify.com/docs/api-docs/b710d8fbef104-read-customer-by-reference).
  def test_list_customers
    # Parameters for the API call
    direction = nil
    page = 1
    per_page = 50
    date_field = 'updated_at'
    start_date = nil
    end_date = nil
    start_datetime = nil
    end_datetime = nil
    q = nil

    # Perform the API call through the SDK function
    result = @controller.list_customers(direction: direction, page: page,
                                        per_page: per_page,
                                        date_field: date_field,
                                        start_date: start_date,
                                        end_date: end_date,
                                        start_datetime: start_datetime,
                                        end_datetime: end_datetime, q: q)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '[{"customer":{"first_name":"Kayla","last_name":"Test","email":"kayla@ex'\
      'ample.com","cc_emails":"john@example.com, sue@example.com","organizatio'\
      'n":"","reference":null,"id":14126091,"created_at":"2016-10-04T15:22:27-'\
      '04:00","updated_at":"2016-10-04T15:22:30-04:00","address":"","address_2'\
      '":"","city":"","state":"","zip":"","country":"","phone":"","verified":n'\
      'ull,"portal_customer_created_at":"2016-10-04T15:22:29-04:00","portal_in'\
      'vite_last_sent_at":"2016-10-04T15:22:30-04:00","portal_invite_last_acce'\
      'pted_at":null,"tax_exempt":false}},{"customer":{"first_name":"Nick ","l'\
      'ast_name":"Test","email":"nick@example.com","cc_emails":"john@example.c'\
      'om, sue@example.com","organization":"","reference":null,"id":14254093,"'\
      'created_at":"2016-10-13T16:52:51-04:00","updated_at":"2016-10-13T16:52:'\
      '54-04:00","address":"","address_2":"","city":"","state":"","zip":"","co'\
      'untry":"","phone":"","verified":null,"portal_customer_created_at":"2016'\
      '-10-13T16:52:54-04:00","portal_invite_last_sent_at":"2016-10-13T16:52:5'\
      '4-04:00","portal_invite_last_accepted_at":null,"tax_exempt":false,"pare'\
      'nt_id":123}},{"customer":{"first_name":"Don","last_name":"Test","email"'\
      ':"don@example.com","cc_emails":"john@example.com, sue@example.com","org'\
      'anization":"","reference":null,"id":14332342,"created_at":"2016-10-19T1'\
      '0:49:13-04:00","updated_at":"2016-10-19T10:49:19-04:00","address":"1737'\
      ' 15th St","address_2":"","city":"Boulder","state":"CO","zip":"80302","c'\
      'ountry":"US","phone":"","verified":null,"portal_customer_created_at":"2'\
      '016-10-19T10:49:19-04:00","portal_invite_last_sent_at":"2016-10-19T10:4'\
      '9:19-04:00","portal_invite_last_accepted_at":null,"tax_exempt":false,"p'\
      'arent_id":null}}]'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(ComparisonHelper.match_body(expected_body, received_body))
  end

end