# maxio_advanced_billing_formerly_chargify_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class ProformaInvoicesControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    setup_class
    @controller = @client.proforma_invoices
    @response_catcher = @controller.http_call_back
  end

  # This endpoint is only available for Relationship Invoicing sites. It cannot be used to create consolidated proforma invoices or preview prepaid subscriptions.
  #
  #Create a proforma invoice to preview costs before a subscription's signup. Like other proforma invoices, it can be emailed to the customer, voided, and publicly viewed on the chargifypay domain.
  #
  #Pass a payload that resembles a subscription create or signup preview request. For example, you can specify components, coupons/a referral, offers, custom pricing, and an existing customer or payment profile to populate a shipping or billing address.
  #
  #A product and customer first name, last name, and email are the minimum requirements. We recommend associating the proforma invoice with a customer_id to easily find their proforma invoices, since the subscription_id will always be blank.
  def test_create_signup_proforma_invoice
    # Parameters for the API call
    body = CreateSubscriptionRequest.from_hash(APIHelper.json_deserialize(
      '{"subscription":{"product_handle":"gold-product","customer_attributes":'\
      '{"first_name":"Myra","last_name":"Maisel","email":"mmaisel@example.com"'\
      '}}}', false))

    # Perform the API call through the SDK function
    result = @controller.create_signup_proforma_invoice(body: body)

    # Test response code
    assert_equal(201, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # This endpoint is only available for Relationship Invoicing sites. It cannot be used to create consolidated proforma invoice previews or preview prepaid subscriptions.
  #
  #Create a signup preview in the format of a proforma invoice to preview costs before a subscription's signup. You have the option of optionally previewing the first renewal's costs as well. The proforma invoice preview will not be persisted.
  #
  #Pass a payload that resembles a subscription create or signup preview request. For example, you can specify components, coupons/a referral, offers, custom pricing, and an existing customer or payment profile to populate a shipping or billing address.
  #
  #A product and customer first name, last name, and email are the minimum requirements.
  def test_preview_signup_proforma_invoice
    # Parameters for the API call
    include_next_proforma_invoice = nil
    body = CreateSubscriptionRequest.from_hash(APIHelper.json_deserialize(
      '{"subscription":{"product_handle":"gold-plan","customer_attributes":{"f'\
      'irst_name":"first","last_name":"last","email":"flast@example.com"}}}', false))

    # Perform the API call through the SDK function
    result = @controller.preview_signup_proforma_invoice(
                                                         include_next_proforma_invoice: include_next_proforma_invoice,
                                                         body: body)

    # Test response code
    assert_equal(201, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

end