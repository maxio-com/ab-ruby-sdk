# maxio_advanced_billing_formerly_chargify_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class InvoicesControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    setup_class
    @controller = @client.invoices
    @response_catcher = @controller.http_call_back
  end

  # By default, invoices returned on the index will only include totals, not detailed breakdowns for `line_items`, `discounts`, `taxes`, `credits`, `payments`, `custom_fields`, or `refunds`. To include breakdowns, pass the specific field as a key in the query with a value set to `true`.
  def test_list_invoices
    # Parameters for the API call
    start_date = nil
    end_date = nil
    status = nil
    subscription_id = nil
    subscription_group_uid = nil
    page = 1
    per_page = 20
    direction = 'desc'
    line_items = false
    discounts = false
    taxes = false
    credits = false
    payments = false
    custom_fields = false
    refunds = false
    date_field = 'due_date'
    start_datetime = nil
    end_datetime = nil
    customer_ids = APIHelper.json_deserialize(
      '[1,2,3]', false)
    number = APIHelper.json_deserialize(
      '["1234","1235"]', false)
    product_ids = APIHelper.json_deserialize(
      '[23,34]', false)
    sort = 'number'

    # Perform the API call through the SDK function
    result = @controller.list_invoices(start_date: start_date,
                                       end_date: end_date, status: status,
                                       subscription_id: subscription_id,
                                       subscription_group_uid: subscription_group_uid,
                                       page: page, per_page: per_page,
                                       direction: direction,
                                       line_items: line_items,
                                       discounts: discounts, taxes: taxes,
                                       credits: credits, payments: payments,
                                       custom_fields: custom_fields,
                                       refunds: refunds, date_field: date_field,
                                       start_datetime: start_datetime,
                                       end_datetime: end_datetime,
                                       customer_ids: customer_ids,
                                       number: number, product_ids: product_ids,
                                       sort: sort)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"invoices":[{"uid":"inv_8htcd29wcq3q6","site_id":51288,"customer_id":2'\
      '0153415,"subscription_id":23277588,"number":"125","sequence_number":125'\
      ',"issue_date":"2018-09-20","due_date":"2018-09-20","paid_date":"2018-09'\
      '-20","status":"paid","collection_method":"automatic","payment_instructi'\
      'ons":"Make checks payable to Acme, Inc.","currency":"USD","consolidatio'\
      'n_level":"parent","parent_invoice_uid":null,"parent_invoice_number":nul'\
      'l,"group_primary_subscription_id":23277588,"product_name":"Trial and se'\
      'tup fee","product_family_name":"Billing Plans","seller":{"name":"Genera'\
      'l Goods","address":{"street":"123 General Goods Way","line2":"Apt. 10",'\
      '"city":"Boston","state":"MA","zip":"02120","country":"US"},"phone":"555'\
      '-555-1212"},"customer":{"chargify_id":20153415,"first_name":"Meg","last'\
      '_name":"Example","organization":"","email":"meg@example.com"},"memo":"P'\
      'lease pay within 15 days.","billing_address":{"street":"123 I Love Cats'\
      ' Way","line2":"","city":"Boston","state":"MA","zip":"90210","country":"'\
      'US"},"shipping_address":{"street":"123 I Love Cats Way","line2":"","cit'\
      'y":"Boston","state":"MA","zip":"90210","country":"US"},"subtotal_amount'\
      '":"100.0","discount_amount":"0.0","tax_amount":"0.0","total_amount":"10'\
      '0.0","credit_amount":"0.0","paid_amount":"100.0","refund_amount":"0.0",'\
      '"due_amount":"0.0"},{"uid":"inv_8hr3546xp4h8n","site_id":51288,"custome'\
      'r_id":21687686,"subscription_id":22007644,"number":"124","sequence_numb'\
      'er":124,"issue_date":"2018-09-18","due_date":"2018-09-18","paid_date":n'\
      'ull,"status":"open","collection_method":"remittance","payment_instructi'\
      'ons":"Make checks payable to Acme, Inc.","currency":"USD","consolidatio'\
      'n_level":"none","parent_invoice_uid":null,"parent_invoice_number":null,'\
      '"group_primary_subscription_id":null,"product_name":"Trial and setup fe'\
      'e","product_family_name":"Billing Plans","seller":{"name":"General Good'\
      's","address":{"street":"123 General Goods Way","line2":"Apt. 10","city"'\
      ':"Boston","state":"MA","zip":"02120","country":"US"},"phone":"555-555-1'\
      '212"},"customer":{"chargify_id":21687686,"first_name":"Charlene","last_'\
      'name":"Tester","organization":"","email":"food@example.com"},"memo":"Pl'\
      'ease pay within 15 days.","billing_address":{"street":"","line2":"","ci'\
      'ty":"","state":"","zip":"","country":""},"shipping_address":{"street":"'\
      '","line2":"","city":"","state":"","zip":"","country":""},"subtotal_amou'\
      'nt":"100.0","discount_amount":"0.0","tax_amount":"0.0","total_amount":"'\
      '100.0","credit_amount":"0.0","paid_amount":"0.0","refund_amount":"0.0",'\
      '"due_amount":"100.0"},{"uid":"inv_8hr3546wdwxkr","site_id":51288,"custo'\
      'mer_id":21687670,"subscription_id":22007627,"number":"123","sequence_nu'\
      'mber":123,"issue_date":"2018-09-18","due_date":"2018-09-18","paid_date"'\
      ':"2018-09-18","status":"paid","collection_method":"automatic","payment_'\
      'instructions":"Make checks payable to Acme, Inc.","currency":"USD","con'\
      'solidation_level":"none","parent_invoice_uid":null,"parent_invoice_numb'\
      'er":null,"group_primary_subscription_id":null,"product_name":"Trial End'\
      ' - Free","product_family_name":"Billing Plans","seller":{"name":"Genera'\
      'l Goods","address":{"street":"123 General Goods Way","line2":"Apt. 10",'\
      '"city":"Boston","state":"MA","zip":"02120","country":"US"},"phone":"555'\
      '-555-1212"},"customer":{"chargify_id":21687670,"first_name":"Hello","la'\
      'st_name":"World","organization":"123","email":"example@example.com"},"m'\
      'emo":"Please pay within 15 days.","billing_address":{"street":"123 Anyw'\
      'here Street","line2":"","city":"Boston","state":"MA","zip":"02120","cou'\
      'ntry":"US"},"shipping_address":{"street":"","line2":"","city":"Boston",'\
      '"state":"AL","zip":"02120","country":"US"},"subtotal_amount":"0.0","dis'\
      'count_amount":"0.0","tax_amount":"0.0","total_amount":"0.0","credit_amo'\
      'unt":"0.0","paid_amount":"0.0","refund_amount":"0.0","due_amount":"0.0"'\
      '},{"uid":"inv_8hjtk8bz56bbp","site_id":51288,"customer_id":20137757,"su'\
      'bscription_id":20541100,"number":"122","sequence_number":122,"issue_dat'\
      'e":"2018-09-10","due_date":"2018-09-10","paid_date":"2018-09-10","statu'\
      's":"paid","collection_method":"automatic","payment_instructions":"Make '\
      'checks payable to Acme, Inc.","currency":"USD","consolidation_level":"n'\
      'one","parent_invoice_uid":null,"parent_invoice_number":null,"group_prim'\
      'ary_subscription_id":null,"product_name":"$0 Product","product_family_n'\
      'ame":"Billing Plans","seller":{"name":"General Goods","address":{"stree'\
      't":"123 General Goods Way","line2":"Apt. 10","city":"Boston","state":"M'\
      'A","zip":"02120","country":"US"},"phone":"555-555-1212"},"customer":{"c'\
      'hargify_id":20137757,"first_name":"Sasha","last_name":"Example","organi'\
      'zation":"","email":"example@example.com"},"memo":"Please pay within 15 '\
      'days.","billing_address":{"street":"123 I Love Cats Way","line2":"","ci'\
      'ty":"Catville","state":"MA","zip":"90210","country":"US"},"shipping_add'\
      'ress":{"street":"123 I Love Cats Way","line2":"","city":"Catville","sta'\
      'te":"AL","zip":"90210","country":"US"},"subtotal_amount":"0.0","discoun'\
      't_amount":"0.0","tax_amount":"0.0","total_amount":"0.0","credit_amount"'\
      ':"0.0","paid_amount":"0.0","refund_amount":"0.0","due_amount":"0.0"}],"'\
      'public_url":"https://www.chargifypay.com/invoice/inv_8jzrw74xq8kxr?toke'\
      'n=fb6kpjz5rcr2vttyjs4rcv6y"}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(ComparisonHelper.match_body(expected_body, received_body))
  end

  # This endpoint returns a list of invoice events. Each event contains event "data" (such as an applied payment) as well as a snapshot of the `invoice` at the time of event completion.
  #
  #Exposed event types are:
  #
  #+ issue_invoice
  #+ apply_credit_note
  #+ apply_payment
  #+ refund_invoice
  #+ void_invoice
  #+ void_remainder
  #+ backport_invoice
  #+ change_invoice_status
  #+ change_invoice_collection_method
  #+ remove_payment
  #
  #Invoice events are returned in ascending order.
  #
  #If both a `since_date` and `since_id` are provided in request parameters, the `since_date` will be used.
  #
  #Note - invoice events that occurred prior to 09/05/2018 __will not__ contain an `invoice` snapshot.
  def test_list_invoice_events
    # Parameters for the API call
    since_date = nil
    since_id = nil
    page = 1
    per_page = 100
    invoice_uid = nil
    with_change_invoice_status = nil
    event_types = nil

    # Perform the API call through the SDK function
    result = @controller.list_invoice_events(since_date: since_date,
                                             since_id: since_id, page: page,
                                             per_page: per_page,
                                             invoice_uid: invoice_uid,
                                             with_change_invoice_status: with_change_invoice_status,
                                             event_types: event_types)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"events":[{"id":83,"event_type":"apply_payment","event_data":{"memo":"'\
      'Non-Resumable Canceled On Purpose - Standard Plan: Renewal payment","or'\
      'iginal_amount":"168.61","applied_amount":"168.61","transaction_time":"2'\
      '018-08-01T16:00:00Z","payment_method":{"card_brand":"visa","card_expira'\
      'tion":"12/2022","last_four":null,"masked_card_number":"XXXX-XXXX-XXXX-1'\
      '111","type":"credit_card"},"transaction_id":126,"consolidation_level":"'\
      'none","parent_invoice_number":null},"timestamp":"2018-08-01T16:00:00Z",'\
      '"invoice":{"id":614942008934401500,"uid":"inv_8gk5bwkct3gqt","site_id":'\
      '20,"customer_id":6,"subscription_id":10,"number":"25","sequence_number"'\
      ':25,"transaction_time":"2018-08-01T16:00:00Z","created_at":"2018-08-01T'\
      '16:00:00Z","updated_at":"2018-08-01T16:00:00Z","issue_date":"2018-08-01'\
      '","due_date":"2018-08-01","paid_date":"2018-08-01","status":"paid","rol'\
      'e":"renewal","collection_method":"automatic","payment_instructions":"Pl'\
      'ease make checks payable to \\"Acme, Inc.\\"","currency":"USD","consoli'\
      'dation_level":"none","parent_invoice_id":null,"subscription_group_id":n'\
      'ull,"parent_invoice_number":null,"product_name":"Standard Plan","produc'\
      't_family_name":"Cloud Compute Servers","seller":{"name":"Acme, Inc.","a'\
      'ddress":{"street":null,"line2":null,"city":null,"state":null,"zip":null'\
      ',"country":null},"phone":"555-555-1234 x137","logo_url":null},"customer'\
      '":{"chargify_id":6,"first_name":"Non-Resumable","last_name":"Canceled O'\
      'n Purpose","organization":null,"email":"evan4@example.com"},"payer":{"c'\
      'hargify_id":6,"first_name":"Non-Resumable","last_name":"Canceled On Pur'\
      'pose","organization":null,"email":"evan4@example.com"},"recipient_email'\
      's":[],"terms":"due_on_receipt","memo":"Thanks for your business! If you'\
      ' have any questions, please contact your account manager.","billing_add'\
      'ress":{"street":"200 Billing Rd.","line2":"Suite 100","city":"Needham",'\
      '"state":"MA","zip":"02494","country":"US"},"shipping_address":{"street"'\
      ':"100 Shipping St.","line2":"Apt 200","city":"Pleasantville","state":"N'\
      'C","zip":"12345","country":"US"},"line_items":[{"uid":"li_8gk5bwkct3gqk'\
      '","title":"Standard Plan","description":"08/01/2018 - 09/01/2018","quan'\
      'tity":"1.0","unit_price":"99.0","subtotal_amount":"99.0","discount_amou'\
      'nt":"9.9","tax_amount":"6.01425","total_amount":"95.11425","tiered_unit'\
      '_price":false,"period_range_start":"2018-08-01","period_range_end":"201'\
      '8-09-01","transaction_id":120,"product_id":84,"product_version":1,"comp'\
      'onent_id":null,"price_point_id":null,"hide":false,"component_cost_data"'\
      ':null},{"uid":"li_8gk5bwkct3gqm","title":"Small Instance (Hourly)","des'\
      'cription":"07/22/2018 - 08/01/2018","quantity":"162.0","unit_price":"0.'\
      '09567901","subtotal_amount":"15.5","discount_amount":"1.55","tax_amount'\
      '":"0.941625","total_amount":"14.891625","tiered_unit_price":true,"perio'\
      'd_range_start":"2018-07-22","period_range_end":"2018-08-01","transactio'\
      'n_id":121,"product_id":84,"product_version":1,"component_id":76,"price_'\
      'point_id":null,"hide":false,"component_cost_data":{"rates":[{"component'\
      '_code_id":null,"price_point_id":160,"product_id":84,"quantity":"162.0",'\
      '"amount":"15.5","pricing_scheme":"tiered","tiers":[{"starting_quantity"'\
      ':1,"ending_quantity":100,"quantity":"100.0","unit_price":"0.0","amount"'\
      ':"0.0"},{"starting_quantity":101,"ending_quantity":null,"quantity":"62.'\
      '0","unit_price":"0.25","amount":"15.5"}]}]}},{"uid":"li_8gk5bwkct3gqn",'\
      '"title":"Large Instance (Hourly)","description":"07/22/2018 - 08/01/201'\
      '8","quantity":"194.0","unit_price":"0.24226804","subtotal_amount":"47.0'\
      '","discount_amount":"4.7","tax_amount":"2.85525","total_amount":"45.155'\
      '25","tiered_unit_price":true,"period_range_start":"2018-07-22","period_'\
      'range_end":"2018-08-01","transaction_id":122,"product_id":84,"product_v'\
      'ersion":1,"component_id":77,"price_point_id":null,"hide":false,"compone'\
      'nt_cost_data":{"rates":[{"component_code_id":null,"price_point_id":161,'\
      '"product_id":84,"quantity":"194.0","amount":"47.0","pricing_scheme":"ti'\
      'ered","tiers":[{"starting_quantity":1,"ending_quantity":100,"quantity":'\
      '"100.0","unit_price":"0.0","amount":"0.0"},{"starting_quantity":101,"en'\
      'ding_quantity":null,"quantity":"94.0","unit_price":"0.5","amount":"47.0'\
      '"}]}]}},{"uid":"li_8gk5bwkct3gqp","title":"IP Addresses","description":'\
      '"08/01/2018 - 09/01/2018","quantity":"7.0","unit_price":"2.0","subtotal'\
      '_amount":"14.0","discount_amount":"1.4","tax_amount":"0.8505","total_am'\
      'ount":"13.4505","tiered_unit_price":false,"period_range_start":"2018-08'\
      '-01","period_range_end":"2018-09-01","transaction_id":123,"product_id":'\
      '84,"product_version":1,"component_id":79,"price_point_id":163,"hide":fa'\
      'lse,"component_cost_data":{"rates":[{"component_code_id":null,"price_po'\
      'int_id":163,"product_id":84,"quantity":"7.0","amount":"14.0","pricing_s'\
      'cheme":"per_unit","tiers":[{"starting_quantity":1,"ending_quantity":nul'\
      'l,"quantity":"7.0","unit_price":"2.0","amount":"14.0"}]}]}}],"subtotal_'\
      'amount":"175.5","discount_amount":"17.55","discounts":[{"uid":"dli_8gk5'\
      'bwkct3gqq","title":"Multi-service discount (10%)","description":null,"c'\
      'ode":"MULTI3","source_type":"Coupon","source_id":40,"discount_type":"pe'\
      'rcentage","percentage":"10.0","eligible_amount":"175.5","discount_amoun'\
      't":"17.55","transaction_id":124,"line_item_breakouts":[{"uid":"li_8gk5b'\
      'wkct3gqk","eligible_amount":"99.0","discount_amount":"9.9"},{"uid":"li_'\
      '8gk5bwkct3gqm","eligible_amount":"15.5","discount_amount":"1.55"},{"uid'\
      '":"li_8gk5bwkct3gqn","eligible_amount":"47.0","discount_amount":"4.7"},'\
      '{"uid":"li_8gk5bwkct3gqp","eligible_amount":"14.0","discount_amount":"1'\
      '.4"}]}],"tax_amount":"10.66","taxes":[{"uid":"tli_8gk5bwkct3gqr","title'\
      '":"NC Sales Tax","description":null,"source_type":"Tax","source_id":1,"'\
      'percentage":"6.75","taxable_amount":"157.95","tax_amount":"10.66","tran'\
      'saction_id":125,"line_item_breakouts":[{"uid":"li_8gk5bwkct3gqk","taxab'\
      'le_amount":"89.1","tax_amount":"6.01425"},{"uid":"li_8gk5bwkct3gqm","ta'\
      'xable_amount":"13.95","tax_amount":"0.941625"},{"uid":"li_8gk5bwkct3gqn'\
      '","taxable_amount":"42.3","tax_amount":"2.85525"},{"uid":"li_8gk5bwkct3'\
      'gqp","taxable_amount":"12.6","tax_amount":"0.8505"}],"tax_component_bre'\
      'akouts":[{"tax_rule_id":1,"percentage":"6.75","country_code":"US","subd'\
      'ivision_code":"NC"}]}],"credit_amount":"0.0","refund_amount":"0.0","tot'\
      'al_amount":"168.61","paid_amount":"168.61","due_amount":"0.0","credits"'\
      ':[],"refunds":[],"payments":[{"memo":"Non-Resumable Canceled On Purpose'\
      ' - Standard Plan: Renewal payment","original_amount":"168.61","applied_'\
      'amount":"168.61","transaction_time":"2018-08-01T16:00:00Z","payment_met'\
      'hod":{"card_brand":"visa","card_expiration":"12/2022","last_four":null,'\
      '"masked_card_number":"XXXX-XXXX-XXXX-1111","type":"credit_card"},"trans'\
      'action_id":126,"prepayment":false}],"custom_fields":[],"display_setting'\
      's":{"hide_zero_subtotal_lines":false,"include_discounts_on_lines":false'\
      '}}}],"page":48,"per_page":1,"total_pages":102}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(ComparisonHelper.match_body(expected_body, received_body))
  end

  # This API call should be used when you want to record an external payment against multiple invoices.
  #
  # In order apply a payment to multiple invoices, at minimum, specify the `amount` and `applications` (i.e., `invoice_uid` and `amount`) details.
  #
  #```
  #{
  #  "payment": {
  #    "memo": "to pay the bills",
  #    "details": "check number 8675309",
  #    "method": "check",
  #    "amount": "250.00",
  #    "applications": [
  #      {
  #        "invoice_uid": "inv_8gk5bwkct3gqt",
  #        "amount": "100.00"
  #      },
  #      {
  #        "invoice_uid": "inv_7bc6bwkct3lyt",
  #        "amount": "150.00"
  #      }
  #    ]
  #  }
  #}
  #```
  #
  #Note that the invoice payment amounts must be greater than 0. Total amount must be greater or equal to invoices payment amount sum.
  def test_record_external_payment_for_invoices
    # Parameters for the API call
    body = CreateMultiInvoicePaymentRequest.from_hash(APIHelper.json_deserialize(
      '{"payment":{"memo":"to pay the bills","details":"check number 8675309",'\
      '"method":"check","amount":"100.00","applications":[{"invoice_uid":"inv_'\
      '8gk5bwkct3gqt","amount":"50.00"},{"invoice_uid":"inv_7bc6bwkct3lyt","am'\
      'ount":"50.00"}]}}', false))

    # Perform the API call through the SDK function
    result = @controller.record_external_payment_for_invoices(body: body)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"payment":{"transaction_id":1,"total_amount":"100.00","currency_code":'\
      '"USD","applications":[{"invoice_uid":"inv_8gk5bwkct3gqt","application_u'\
      'id":"pmt_1tr0hgsct3ybx","applied_amount":"50.00"},{"invoice_uid":"inv_7'\
      'bc6bwkct3lyt","application_uid":"pmt_2","applied_amount":"50.00"}]}}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(ComparisonHelper.match_body(expected_body, received_body))
  end

  # Credit Notes are like inverse invoices. They reduce the amount a customer owes.
  #
  #By default, the credit notes returned by this endpoint will exclude the arrays of `line_items`, `discounts`, `taxes`, `applications`, or `refunds`. To include these arrays, pass the specific field as a key in the query with a value set to `true`.
  def test_list_credit_notes
    # Parameters for the API call
    subscription_id = nil
    page = 1
    per_page = 20
    line_items = false
    discounts = false
    taxes = false
    refunds = false
    applications = false

    # Perform the API call through the SDK function
    result = @controller.list_credit_notes(subscription_id: subscription_id,
                                           page: page, per_page: per_page,
                                           line_items: line_items,
                                           discounts: discounts, taxes: taxes,
                                           refunds: refunds,
                                           applications: applications)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"credit_notes":[{"uid":"cn_8m9vbd5kkv7kr","site_id":20,"customer_id":3'\
      ',"subscription_id":2,"number":"77","sequence_number":78,"issue_date":"2'\
      '018-12-31","applied_date":"2018-12-31","status":"applied","currency":"U'\
      'SD","memo":"Refund for overpayment","seller":{"name":"Acme, Inc.","addr'\
      'ess":{"street":"122 E Houston St","line2":"Suite 105","city":"San Anton'\
      'io","state":"TX","zip":"78205","country":"US"},"phone":"555-555-1234 x1'\
      '37"},"customer":{"chargify_id":3,"first_name":"Marty","last_name":"McFl'\
      'y","organization":"Time Travellers, Inc.","email":"timetraveller1985@ex'\
      'ample.com","reference":null},"billing_address":{"street":"200 Billing R'\
      'd.","line2":"Suite 100","city":"Needham","state":"MA","zip":"02494","co'\
      'untry":"US"},"shipping_address":{"street":"100 Shipping St.","line2":"A'\
      'pt 200","city":"Pleasantville","state":"NC","zip":"12345","country":"US'\
      '"},"subtotal_amount":"208.69341779","discount_amount":"20.87125167","ta'\
      'x_amount":"12.67783387","total_amount":"200.5","applied_amount":"200.5"'\
      ',"remaining_amount":"0.0","line_items":[{"uid":"cnli_8k5jvdzct4h9x","ti'\
      'tle":"IP Addresses: 5 to 10 addresses","description":"38.2% credit","qu'\
      'antity":"0.9855","unit_price":"2.0","subtotal_amount":"1.971004","disco'\
      'unt_amount":"0.19862831","tax_amount":"0.11963536","total_amount":"1.89'\
      '201105","tiered_unit_price":false,"period_range_start":"2018-11-30","pe'\
      'riod_range_end":"2018-11-30","product_id":85,"product_version":1,"compo'\
      'nent_id":81,"price_point_id":165},{"uid":"cnli_8kjttvjcjx8b4","title":"'\
      'Professional Plan","description":"38.2% credit","quantity":"0.382","uni'\
      't_price":"299.0","subtotal_amount":"114.21127834","discount_amount":"11'\
      '.42112783","tax_amount":"6.93833516","total_amount":"109.72848567","tie'\
      'red_unit_price":false,"period_range_start":"2018-12-30","period_range_e'\
      'nd":"2018-12-30","product_id":85,"product_version":1,"component_id":nul'\
      'l,"price_point_id":null},{"uid":"cnli_8kjttvjknzhx7","title":"Small Ins'\
      'tance (Hourly)","description":"38.2% credit","quantity":"74.8676","unit'\
      '_price":"0.12244898","subtotal_amount":"9.16746047","discount_amount":"'\
      '0.91674605","tax_amount":"0.55692322","total_amount":"8.80763764","tier'\
      'ed_unit_price":true,"period_range_start":"2018-11-30","period_range_end'\
      '":"2018-11-30","product_id":85,"product_version":1,"component_id":78,"p'\
      'rice_point_id":null},{"uid":"cnli_8kjttvjnmh25w","title":"Large Instanc'\
      'e (Hourly)","description":"38.2% credit","quantity":"183.3492","unit_pr'\
      'ice":"0.39583333","subtotal_amount":"72.57572871","discount_amount":"7.'\
      '25757287","tax_amount":"4.40897552","total_amount":"69.72713136","tiere'\
      'd_unit_price":true,"period_range_start":"2018-11-30","period_range_end"'\
      ':"2018-11-30","product_id":85,"product_version":1,"component_id":79,"pr'\
      'ice_point_id":null},{"uid":"cnli_8kjttvjqn86kc","title":"Email Messages'\
      '","description":"38.2% credit","quantity":"10076.9489","unit_price":"0.'\
      '00031045","subtotal_amount":"3.12839588","discount_amount":"0.31322157"'\
      ',"tax_amount":"0.19002427","total_amount":"3.00519858","tiered_unit_pri'\
      'ce":true,"period_range_start":"2018-11-30","period_range_end":"2018-11-'\
      '30","product_id":85,"product_version":1,"component_id":80,"price_point_'\
      'id":null},{"uid":"cnli_8kjttvjtxxbdd","title":"IP Addresses","descripti'\
      'on":"38.2% credit","quantity":"3.8198","unit_price":"2.0","subtotal_amo'\
      'unt":"7.63955039","discount_amount":"0.76395504","tax_amount":"0.464102'\
      '69","total_amount":"7.33969804","tiered_unit_price":false,"period_range'\
      '_start":"2018-12-30","period_range_end":"2018-12-30","product_id":85,"p'\
      'roduct_version":1,"component_id":81,"price_point_id":165}],"discounts":'\
      '[{"uid":"cndli_8k5jvdzct4h9y","title":"Multi-service discount (10%)","c'\
      'ode":"MULTI3","source_type":"Coupon","source_id":40,"discount_type":"pe'\
      'rcentage","percentage":"10.0","eligible_amount":"208.69341779","discoun'\
      't_amount":"20.87125167","line_item_breakouts":[{"uid":"cnli_8k5jvdzct4h'\
      '9x","eligible_amount":"1.971004","discount_amount":"0.19862831"},{"uid"'\
      ':"cnli_8kjttvjcjx8b4","eligible_amount":"114.21127834","discount_amount'\
      '":"11.42112783"},{"uid":"cnli_8kjttvjknzhx7","eligible_amount":"9.16746'\
      '047","discount_amount":"0.91674605"},{"uid":"cnli_8kjttvjnmh25w","eligi'\
      'ble_amount":"72.57572871","discount_amount":"7.25757287"},{"uid":"cnli_'\
      '8kjttvjqn86kc","eligible_amount":"3.12839588","discount_amount":"0.3132'\
      '2157"},{"uid":"cnli_8kjttvjtxxbdd","eligible_amount":"7.63955039","disc'\
      'ount_amount":"0.76395504"}]}],"taxes":[{"uid":"cntli_8k5jvdzct4h9z","ti'\
      'tle":"NC Sales Tax","source_type":"Tax","source_id":1,"percentage":"6.7'\
      '5","taxable_amount":"187.82216613","tax_amount":"12.67783387","line_ite'\
      'm_breakouts":[{"uid":"cnli_8k5jvdzct4h9x","taxable_amount":"1.77237569"'\
      ',"tax_amount":"0.11963536"},{"uid":"cnli_8kjttvjcjx8b4","taxable_amount'\
      '":"102.7901505","tax_amount":"6.93833516"},{"uid":"cnli_8kjttvjknzhx7",'\
      '"taxable_amount":"8.25071442","tax_amount":"0.55692322"},{"uid":"cnli_8'\
      'kjttvjnmh25w","taxable_amount":"65.31815584","tax_amount":"4.40897552"}'\
      ',{"uid":"cnli_8kjttvjqn86kc","taxable_amount":"2.81517432","tax_amount"'\
      ':"0.19002427"},{"uid":"cnli_8kjttvjtxxbdd","taxable_amount":"6.87559535'\
      '","tax_amount":"0.46410269"}]}],"applications":[{"uid":"cdt_8m9vbdbdwd2'\
      '8n","transaction_time":"2018-12-31T21:19:28Z","invoice_uid":"inv_8k5jvd'\
      'zct4hb2","memo":"Refund for overpayment","applied_amount":"200.5"}],"re'\
      'funds":[{"transaction_id":329,"payment_id":39,"memo":"Refund for overpa'\
      'yment","original_amount":"524.9","applied_amount":"200.5"}]}]}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(ComparisonHelper.match_body(expected_body, received_body))
  end

end