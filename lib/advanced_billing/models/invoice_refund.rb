# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # InvoiceRefund Model.
  class InvoiceRefund < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :transaction_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :payment_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :memo

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :original_amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :applied_amount

    # The transaction ID for the refund as returned from the payment gateway
    # @return [String]
    attr_accessor :gateway_transaction_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['transaction_id'] = 'transaction_id'
      @_hash['payment_id'] = 'payment_id'
      @_hash['memo'] = 'memo'
      @_hash['original_amount'] = 'original_amount'
      @_hash['applied_amount'] = 'applied_amount'
      @_hash['gateway_transaction_id'] = 'gateway_transaction_id'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        transaction_id
        payment_id
        memo
        original_amount
        applied_amount
        gateway_transaction_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        gateway_transaction_id
      ]
    end

    def initialize(transaction_id = SKIP,
                   payment_id = SKIP,
                   memo = SKIP,
                   original_amount = SKIP,
                   applied_amount = SKIP,
                   gateway_transaction_id = SKIP)
      @transaction_id = transaction_id unless transaction_id == SKIP
      @payment_id = payment_id unless payment_id == SKIP
      @memo = memo unless memo == SKIP
      @original_amount = original_amount unless original_amount == SKIP
      @applied_amount = applied_amount unless applied_amount == SKIP
      @gateway_transaction_id = gateway_transaction_id unless gateway_transaction_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      transaction_id =
        hash.key?('transaction_id') ? hash['transaction_id'] : SKIP
      payment_id = hash.key?('payment_id') ? hash['payment_id'] : SKIP
      memo = hash.key?('memo') ? hash['memo'] : SKIP
      original_amount =
        hash.key?('original_amount') ? hash['original_amount'] : SKIP
      applied_amount =
        hash.key?('applied_amount') ? hash['applied_amount'] : SKIP
      gateway_transaction_id =
        hash.key?('gateway_transaction_id') ? hash['gateway_transaction_id'] : SKIP

      # Create object from extracted values.
      InvoiceRefund.new(transaction_id,
                        payment_id,
                        memo,
                        original_amount,
                        applied_amount,
                        gateway_transaction_id)
    end
  end
end
