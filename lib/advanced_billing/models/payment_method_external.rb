# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # PaymentMethodExternal Model.
  class PaymentMethodExternal < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :details

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :kind

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :memo

    # TODO: Write general description for this method
    # @return [InvoiceEventPaymentMethod]
    attr_accessor :type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['details'] = 'details'
      @_hash['kind'] = 'kind'
      @_hash['memo'] = 'memo'
      @_hash['type'] = 'type'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      %w[
        details
        memo
      ]
    end

    def initialize(details:, kind:, memo:, type:, additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @details = details
      @kind = kind
      @memo = memo
      @type = type
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      details = hash.key?('details') ? hash['details'] : nil
      kind = hash.key?('kind') ? hash['kind'] : nil
      memo = hash.key?('memo') ? hash['memo'] : nil
      type = hash.key?('type') ? hash['type'] : nil

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      PaymentMethodExternal.new(details: details,
                                kind: kind,
                                memo: memo,
                                type: type,
                                additional_properties: additional_properties)
    end

    # Validates an instance of the object from a given value.
    # @param [PaymentMethodExternal | Hash] The value against the validation is performed.
    def self.validate(value)
      if value.instance_of? self
        return (
          APIHelper.valid_type?(value.details,
                                ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.kind,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.memo,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.type,
                                  ->(val) { InvoiceEventPaymentMethod.validate(val) })
        )
      end

      return false unless value.instance_of? Hash

      (
        APIHelper.valid_type?(value['details'],
                              ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['kind'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['memo'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['type'],
                                ->(val) { InvoiceEventPaymentMethod.validate(val) })
      )
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} details: #{@details}, kind: #{@kind}, memo: #{@memo}, type: #{@type},"\
      " additional_properties: #{get_additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} details: #{@details.inspect}, kind: #{@kind.inspect}, memo:"\
      " #{@memo.inspect}, type: #{@type.inspect}, additional_properties:"\
      " #{get_additional_properties}>"
    end
  end
end
