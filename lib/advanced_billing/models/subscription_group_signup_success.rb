# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # SubscriptionGroupSignupSuccess Model.
  class SubscriptionGroupSignupSuccess < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [SubscriptionGroupSignupSuccessData]
    attr_accessor :subscription_group

    # TODO: Write general description for this method
    # @return [Customer]
    attr_accessor :customer

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['subscription_group'] = 'subscription_group'
      @_hash['customer'] = 'customer'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(subscription_group = nil,
                   customer = nil)
      @subscription_group = subscription_group
      @customer = customer
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      if hash['subscription_group']
        subscription_group = SubscriptionGroupSignupSuccessData.from_hash(hash['subscription_group'])
      end
      customer = Customer.from_hash(hash['customer']) if hash['customer']

      # Create object from extracted values.
      SubscriptionGroupSignupSuccess.new(subscription_group,
                                         customer)
    end

    # Validates an instance of the object from a given value.
    # @param [SubscriptionGroupSignupSuccess | Hash] The value against the validation is performed.
    def self.validate(value)
      if value.instance_of? self
        return (
          APIHelper.valid_type?(value.subscription_group,
                                ->(val) { SubscriptionGroupSignupSuccessData.validate(val) }) and
            APIHelper.valid_type?(value.customer,
                                  ->(val) { Customer.validate(val) })
        )
      end

      return false unless value.instance_of? Hash

      (
        APIHelper.valid_type?(value['subscription_group'],
                              ->(val) { SubscriptionGroupSignupSuccessData.validate(val) }) and
          APIHelper.valid_type?(value['customer'],
                                ->(val) { Customer.validate(val) })
      )
    end
  end
end
