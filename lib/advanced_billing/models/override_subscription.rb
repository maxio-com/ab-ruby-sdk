# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # OverrideSubscription Model.
  class OverrideSubscription < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Can be used to record an external signup date. Chargify uses this field to
    # record when a subscription first goes active (either at signup or at trial
    # end)
    # @return [String]
    attr_accessor :activated_at

    # Can be used to record an external cancellation date. Chargify sets this
    # field automatically when a subscription is canceled, whether by request or
    # via dunning.
    # @return [String]
    attr_accessor :canceled_at

    # Can be used to record a reason for the original cancellation.
    # @return [String]
    attr_accessor :cancellation_message

    # Can be used to record an external expiration date. Chargify sets this
    # field automatically when a subscription expires (ceases billing) after a
    # prescribed amount of time.
    # @return [String]
    attr_accessor :expires_at

    # Can only be used when a subscription is unbilled, which happens when a
    # future initial billing date is passed at subscription creation. The value
    # passed must be before the current date and time. Allows you to set when
    # the period started so mid period component allocations have the correct
    # proration.
    # @return [String]
    attr_accessor :current_period_starts_at

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['activated_at'] = 'activated_at'
      @_hash['canceled_at'] = 'canceled_at'
      @_hash['cancellation_message'] = 'cancellation_message'
      @_hash['expires_at'] = 'expires_at'
      @_hash['current_period_starts_at'] = 'current_period_starts_at'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        activated_at
        canceled_at
        cancellation_message
        expires_at
        current_period_starts_at
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(activated_at = SKIP,
                   canceled_at = SKIP,
                   cancellation_message = SKIP,
                   expires_at = SKIP,
                   current_period_starts_at = SKIP)
      @activated_at = activated_at unless activated_at == SKIP
      @canceled_at = canceled_at unless canceled_at == SKIP
      @cancellation_message = cancellation_message unless cancellation_message == SKIP
      @expires_at = expires_at unless expires_at == SKIP
      @current_period_starts_at = current_period_starts_at unless current_period_starts_at == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      activated_at = hash.key?('activated_at') ? hash['activated_at'] : SKIP
      canceled_at = hash.key?('canceled_at') ? hash['canceled_at'] : SKIP
      cancellation_message =
        hash.key?('cancellation_message') ? hash['cancellation_message'] : SKIP
      expires_at = hash.key?('expires_at') ? hash['expires_at'] : SKIP
      current_period_starts_at =
        hash.key?('current_period_starts_at') ? hash['current_period_starts_at'] : SKIP

      # Create object from extracted values.
      OverrideSubscription.new(activated_at,
                               canceled_at,
                               cancellation_message,
                               expires_at,
                               current_period_starts_at)
    end
  end
end
