# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # Overrides the default address.
  class CreateInvoiceAddress < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :first_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :phone

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :address

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :address_2

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :city

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :state

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :zip

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :country

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['first_name'] = 'first_name'
      @_hash['last_name'] = 'last_name'
      @_hash['phone'] = 'phone'
      @_hash['address'] = 'address'
      @_hash['address_2'] = 'address_2'
      @_hash['city'] = 'city'
      @_hash['state'] = 'state'
      @_hash['zip'] = 'zip'
      @_hash['country'] = 'country'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        first_name
        last_name
        phone
        address
        address_2
        city
        state
        zip
        country
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(first_name = SKIP,
                   last_name = SKIP,
                   phone = SKIP,
                   address = SKIP,
                   address_2 = SKIP,
                   city = SKIP,
                   state = SKIP,
                   zip = SKIP,
                   country = SKIP)
      @first_name = first_name unless first_name == SKIP
      @last_name = last_name unless last_name == SKIP
      @phone = phone unless phone == SKIP
      @address = address unless address == SKIP
      @address_2 = address_2 unless address_2 == SKIP
      @city = city unless city == SKIP
      @state = state unless state == SKIP
      @zip = zip unless zip == SKIP
      @country = country unless country == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      first_name = hash.key?('first_name') ? hash['first_name'] : SKIP
      last_name = hash.key?('last_name') ? hash['last_name'] : SKIP
      phone = hash.key?('phone') ? hash['phone'] : SKIP
      address = hash.key?('address') ? hash['address'] : SKIP
      address_2 = hash.key?('address_2') ? hash['address_2'] : SKIP
      city = hash.key?('city') ? hash['city'] : SKIP
      state = hash.key?('state') ? hash['state'] : SKIP
      zip = hash.key?('zip') ? hash['zip'] : SKIP
      country = hash.key?('country') ? hash['country'] : SKIP

      # Create object from extracted values.
      CreateInvoiceAddress.new(first_name,
                               last_name,
                               phone,
                               address,
                               address_2,
                               city,
                               state,
                               zip,
                               country)
    end
  end
end
