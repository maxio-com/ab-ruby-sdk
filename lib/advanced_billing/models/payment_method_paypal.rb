# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # PaymentMethodPaypal Model.
  class PaymentMethodPaypal < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email

    # TODO: Write general description for this method
    # @return [InvoiceEventPaymentMethod]
    attr_accessor :type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['email'] = 'email'
      @_hash['type'] = 'type'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(email = nil,
                   type = nil)
      @email = email
      @type = type
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      email = hash.key?('email') ? hash['email'] : nil
      type = hash.key?('type') ? hash['type'] : nil

      # Create object from extracted values.
      PaymentMethodPaypal.new(email,
                              type)
    end

    # Validates an instance of the object from a given value.
    # @param [PaymentMethodPaypal | Hash] The value against the validation is performed.
    def self.validate(value)
      if value.instance_of? self
        return (
          APIHelper.valid_type?(value.email,
                                ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.type,
                                  ->(val) { InvoiceEventPaymentMethod.validate(val) })
        )
      end

      return false unless value.instance_of? Hash

      (
        APIHelper.valid_type?(value['email'],
                              ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['type'],
                                ->(val) { InvoiceEventPaymentMethod.validate(val) })
      )
    end
  end
end
