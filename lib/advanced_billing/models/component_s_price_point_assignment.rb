# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # ComponentSPricePointAssignment Model.
  class ComponentSPricePointAssignment < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :component_id

    # TODO: Write general description for this method
    # @return [Object]
    attr_accessor :price_point

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['component_id'] = 'component_id'
      @_hash['price_point'] = 'price_point'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        component_id
        price_point
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(component_id = SKIP,
                   price_point = SKIP)
      @component_id = component_id unless component_id == SKIP
      @price_point = price_point unless price_point == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      component_id = hash.key?('component_id') ? hash['component_id'] : SKIP
      price_point = hash.key?('price_point') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:ComponentSPricePointAssignmentPricePoint), hash['price_point']
      ) : SKIP

      # Create object from extracted values.
      ComponentSPricePointAssignment.new(component_id,
                                         price_point)
    end

    # Validates an instance of the object from a given value.
    # @param [ComponentSPricePointAssignment | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end
  end
end
