# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # ComponentPricePointErrorItem Model.
  class ComponentPricePointErrorItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :component_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :message

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :price_point

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['component_id'] = 'component_id'
      @_hash['message'] = 'message'
      @_hash['price_point'] = 'price_point'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        component_id
        message
        price_point
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(component_id = SKIP,
                   message = SKIP,
                   price_point = SKIP)
      @component_id = component_id unless component_id == SKIP
      @message = message unless message == SKIP
      @price_point = price_point unless price_point == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      component_id = hash.key?('component_id') ? hash['component_id'] : SKIP
      message = hash.key?('message') ? hash['message'] : SKIP
      price_point = hash.key?('price_point') ? hash['price_point'] : SKIP

      # Create object from extracted values.
      ComponentPricePointErrorItem.new(component_id,
                                       message,
                                       price_point)
    end
  end
end
