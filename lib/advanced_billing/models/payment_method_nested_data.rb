# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # A nested data structure detailing the method of payment
  class PaymentMethodNestedData < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :masked_account_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :masked_routing_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :card_brand

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :card_expiration

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_four

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :masked_card_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :details

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :kind

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :memo

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['type'] = 'type'
      @_hash['masked_account_number'] = 'masked_account_number'
      @_hash['masked_routing_number'] = 'masked_routing_number'
      @_hash['card_brand'] = 'card_brand'
      @_hash['card_expiration'] = 'card_expiration'
      @_hash['last_four'] = 'last_four'
      @_hash['masked_card_number'] = 'masked_card_number'
      @_hash['details'] = 'details'
      @_hash['kind'] = 'kind'
      @_hash['memo'] = 'memo'
      @_hash['email'] = 'email'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        type
        masked_account_number
        masked_routing_number
        card_brand
        card_expiration
        last_four
        masked_card_number
        details
        kind
        memo
        email
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        last_four
      ]
    end

    def initialize(type = 'apple_pay',
                   masked_account_number = SKIP,
                   masked_routing_number = SKIP,
                   card_brand = SKIP,
                   card_expiration = SKIP,
                   last_four = SKIP,
                   masked_card_number = SKIP,
                   details = SKIP,
                   kind = SKIP,
                   memo = SKIP,
                   email = SKIP)
      @type = type unless type == SKIP
      @masked_account_number = masked_account_number unless masked_account_number == SKIP
      @masked_routing_number = masked_routing_number unless masked_routing_number == SKIP
      @card_brand = card_brand unless card_brand == SKIP
      @card_expiration = card_expiration unless card_expiration == SKIP
      @last_four = last_four unless last_four == SKIP
      @masked_card_number = masked_card_number unless masked_card_number == SKIP
      @details = details unless details == SKIP
      @kind = kind unless kind == SKIP
      @memo = memo unless memo == SKIP
      @email = email unless email == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      type = hash['type'] ||= 'apple_pay'
      masked_account_number =
        hash.key?('masked_account_number') ? hash['masked_account_number'] : SKIP
      masked_routing_number =
        hash.key?('masked_routing_number') ? hash['masked_routing_number'] : SKIP
      card_brand = hash.key?('card_brand') ? hash['card_brand'] : SKIP
      card_expiration =
        hash.key?('card_expiration') ? hash['card_expiration'] : SKIP
      last_four = hash.key?('last_four') ? hash['last_four'] : SKIP
      masked_card_number =
        hash.key?('masked_card_number') ? hash['masked_card_number'] : SKIP
      details = hash.key?('details') ? hash['details'] : SKIP
      kind = hash.key?('kind') ? hash['kind'] : SKIP
      memo = hash.key?('memo') ? hash['memo'] : SKIP
      email = hash.key?('email') ? hash['email'] : SKIP

      # Create object from extracted values.
      PaymentMethodNestedData.new(type,
                                  masked_account_number,
                                  masked_routing_number,
                                  card_brand,
                                  card_expiration,
                                  last_four,
                                  masked_card_number,
                                  details,
                                  kind,
                                  memo,
                                  email)
    end
  end
end
