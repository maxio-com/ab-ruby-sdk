# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # RecordPaymentResponse Model.
  class RecordPaymentResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[PaidInvoice]]
    attr_accessor :paid_invoices

    # TODO: Write general description for this method
    # @return [InvoicePrePayment]
    attr_accessor :prepayment

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['paid_invoices'] = 'paid_invoices'
      @_hash['prepayment'] = 'prepayment'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        paid_invoices
        prepayment
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        prepayment
      ]
    end

    def initialize(paid_invoices: SKIP, prepayment: SKIP,
                   additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @paid_invoices = paid_invoices unless paid_invoices == SKIP
      @prepayment = prepayment unless prepayment == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      paid_invoices = nil
      unless hash['paid_invoices'].nil?
        paid_invoices = []
        hash['paid_invoices'].each do |structure|
          paid_invoices << (PaidInvoice.from_hash(structure) if structure)
        end
      end

      paid_invoices = SKIP unless hash.key?('paid_invoices')
      prepayment = InvoicePrePayment.from_hash(hash['prepayment']) if hash['prepayment']

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      RecordPaymentResponse.new(paid_invoices: paid_invoices,
                                prepayment: prepayment,
                                additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} paid_invoices: #{@paid_invoices}, prepayment: #{@prepayment},"\
      " additional_properties: #{get_additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} paid_invoices: #{@paid_invoices.inspect}, prepayment:"\
      " #{@prepayment.inspect}, additional_properties: #{get_additional_properties}>"
    end
  end
end
