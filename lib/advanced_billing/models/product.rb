# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # Product Model.
  class Product < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # The product name
    # @return [String]
    attr_accessor :name

    # The product API handle
    # @return [String]
    attr_accessor :handle

    # The product description
    # @return [String]
    attr_accessor :description

    # E.g. Internal ID or SKU Number
    # @return [String]
    attr_accessor :accounting_code

    # Deprecated value that can be ignored unless you have legacy hosted pages.
    # For Public Signup Page users, please read this attribute from under the
    # signup page.
    # @return [TrueClass | FalseClass]
    attr_accessor :request_credit_card

    # A numerical interval for the length a subscription to this product will
    # run before it expires. See the description of interval for a description
    # of how this value is coupled with an interval unit to calculate the full
    # interval
    # @return [Integer]
    attr_accessor :expiration_interval

    # A string representing the trial interval unit for this product, either
    # month or day
    # @return [ExtendedIntervalUnit]
    attr_accessor :expiration_interval_unit

    # Timestamp indicating when this product was created
    # @return [String]
    attr_accessor :created_at

    # Timestamp indicating when this product was last updated
    # @return [String]
    attr_accessor :updated_at

    # The product price, in integer cents
    # @return [Integer]
    attr_accessor :price_in_cents

    # The numerical interval. i.e. an interval of ‘30’ coupled with an
    # interval_unit of day would mean this product would renew every 30 days
    # @return [Integer]
    attr_accessor :interval

    # A string representing the interval unit for this product, either month or
    # day
    # @return [IntervalUnit]
    attr_accessor :interval_unit

    # The up front charge you have specified.
    # @return [Integer]
    attr_accessor :initial_charge_in_cents

    # The price of the trial period for a subscription to this product, in
    # integer cents.
    # @return [Integer]
    attr_accessor :trial_price_in_cents

    # A numerical interval for the length of the trial period of a subscription
    # to this product. See the description of interval for a description of how
    # this value is coupled with an interval unit to calculate the full interval
    # @return [Integer]
    attr_accessor :trial_interval

    # A string representing the trial interval unit for this product, either
    # month or day
    # @return [IntervalUnit]
    attr_accessor :trial_interval_unit

    # Timestamp indicating when this product was archived
    # @return [String]
    attr_accessor :archived_at

    # Boolean that controls whether a payment profile is required to be entered
    # for customers wishing to sign up on this product.
    # @return [TrueClass | FalseClass]
    attr_accessor :require_credit_card

    # Boolean that controls whether a payment profile is required to be entered
    # for customers wishing to sign up on this product.
    # @return [String]
    attr_accessor :return_params

    # Boolean that controls whether a payment profile is required to be entered
    # for customers wishing to sign up on this product.
    # @return [TrueClass | FalseClass]
    attr_accessor :taxable

    # The url to which a customer will be returned after a successful account
    # update
    # @return [String]
    attr_accessor :update_return_url

    # The url to which a customer will be returned after a successful account
    # update
    # @return [TrueClass | FalseClass]
    attr_accessor :initial_charge_after_trial

    # The version of the product
    # @return [Integer]
    attr_accessor :version_number

    # The parameters will append to the url after a successful account update.
    # See [help
    # documentation](https://help.chargify.com/products/product-editing.html#ret
    # urn-parameters-after-account-update)
    # @return [String]
    attr_accessor :update_return_params

    # The parameters will append to the url after a successful account update.
    # See [help
    # documentation](https://help.chargify.com/products/product-editing.html#ret
    # urn-parameters-after-account-update)
    # @return [ProductFamily]
    attr_accessor :product_family

    # The parameters will append to the url after a successful account update.
    # See [help
    # documentation](https://help.chargify.com/products/product-editing.html#ret
    # urn-parameters-after-account-update)
    # @return [Array[PublicSignupPage]]
    attr_accessor :public_signup_pages

    # The parameters will append to the url after a successful account update.
    # See [help
    # documentation](https://help.chargify.com/products/product-editing.html#ret
    # urn-parameters-after-account-update)
    # @return [String]
    attr_accessor :product_price_point_name

    # A boolean indicating whether to request a billing address on any
    # Self-Service Pages that are used by subscribers of this product.
    # @return [TrueClass | FalseClass]
    attr_accessor :request_billing_address

    # A boolean indicating whether a billing address is required to add a
    # payment profile, especially at signup.
    # @return [TrueClass | FalseClass]
    attr_accessor :require_billing_address

    # A boolean indicating whether a shipping address is required for the
    # customer, especially at signup.
    # @return [TrueClass | FalseClass]
    attr_accessor :require_shipping_address

    # A string representing the tax code related to the product type. This is
    # especially important when using the Avalara service to tax based on
    # locale. This attribute has a max length of 10 characters.
    # @return [String]
    attr_accessor :tax_code

    # A string representing the tax code related to the product type. This is
    # especially important when using the Avalara service to tax based on
    # locale. This attribute has a max length of 10 characters.
    # @return [Integer]
    attr_accessor :default_product_price_point_id

    # A string representing the tax code related to the product type. This is
    # especially important when using the Avalara service to tax based on
    # locale. This attribute has a max length of 10 characters.
    # @return [TrueClass | FalseClass]
    attr_accessor :use_site_exchange_rate

    # One of the following: Business Software, Consumer Software, Digital
    # Services, Physical Goods, Other
    # @return [String]
    attr_accessor :item_category

    # One of the following: Business Software, Consumer Software, Digital
    # Services, Physical Goods, Other
    # @return [Integer]
    attr_accessor :product_price_point_id

    # One of the following: Business Software, Consumer Software, Digital
    # Services, Physical Goods, Other
    # @return [String]
    attr_accessor :product_price_point_handle

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['name'] = 'name'
      @_hash['handle'] = 'handle'
      @_hash['description'] = 'description'
      @_hash['accounting_code'] = 'accounting_code'
      @_hash['request_credit_card'] = 'request_credit_card'
      @_hash['expiration_interval'] = 'expiration_interval'
      @_hash['expiration_interval_unit'] = 'expiration_interval_unit'
      @_hash['created_at'] = 'created_at'
      @_hash['updated_at'] = 'updated_at'
      @_hash['price_in_cents'] = 'price_in_cents'
      @_hash['interval'] = 'interval'
      @_hash['interval_unit'] = 'interval_unit'
      @_hash['initial_charge_in_cents'] = 'initial_charge_in_cents'
      @_hash['trial_price_in_cents'] = 'trial_price_in_cents'
      @_hash['trial_interval'] = 'trial_interval'
      @_hash['trial_interval_unit'] = 'trial_interval_unit'
      @_hash['archived_at'] = 'archived_at'
      @_hash['require_credit_card'] = 'require_credit_card'
      @_hash['return_params'] = 'return_params'
      @_hash['taxable'] = 'taxable'
      @_hash['update_return_url'] = 'update_return_url'
      @_hash['initial_charge_after_trial'] = 'initial_charge_after_trial'
      @_hash['version_number'] = 'version_number'
      @_hash['update_return_params'] = 'update_return_params'
      @_hash['product_family'] = 'product_family'
      @_hash['public_signup_pages'] = 'public_signup_pages'
      @_hash['product_price_point_name'] = 'product_price_point_name'
      @_hash['request_billing_address'] = 'request_billing_address'
      @_hash['require_billing_address'] = 'require_billing_address'
      @_hash['require_shipping_address'] = 'require_shipping_address'
      @_hash['tax_code'] = 'tax_code'
      @_hash['default_product_price_point_id'] =
        'default_product_price_point_id'
      @_hash['use_site_exchange_rate'] = 'use_site_exchange_rate'
      @_hash['item_category'] = 'item_category'
      @_hash['product_price_point_id'] = 'product_price_point_id'
      @_hash['product_price_point_handle'] = 'product_price_point_handle'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        name
        handle
        description
        accounting_code
        request_credit_card
        expiration_interval
        expiration_interval_unit
        created_at
        updated_at
        price_in_cents
        interval
        interval_unit
        initial_charge_in_cents
        trial_price_in_cents
        trial_interval
        trial_interval_unit
        archived_at
        require_credit_card
        return_params
        taxable
        update_return_url
        initial_charge_after_trial
        version_number
        update_return_params
        product_family
        public_signup_pages
        product_price_point_name
        request_billing_address
        require_billing_address
        require_shipping_address
        tax_code
        default_product_price_point_id
        use_site_exchange_rate
        item_category
        product_price_point_id
        product_price_point_handle
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        handle
        accounting_code
        expiration_interval
        expiration_interval_unit
        initial_charge_in_cents
        trial_price_in_cents
        trial_interval
        trial_interval_unit
        archived_at
        return_params
        update_return_url
        update_return_params
        tax_code
        use_site_exchange_rate
        item_category
        product_price_point_handle
      ]
    end

    def initialize(id = SKIP,
                   name = SKIP,
                   handle = SKIP,
                   description = SKIP,
                   accounting_code = SKIP,
                   request_credit_card = SKIP,
                   expiration_interval = SKIP,
                   expiration_interval_unit = SKIP,
                   created_at = SKIP,
                   updated_at = SKIP,
                   price_in_cents = SKIP,
                   interval = SKIP,
                   interval_unit = SKIP,
                   initial_charge_in_cents = SKIP,
                   trial_price_in_cents = SKIP,
                   trial_interval = SKIP,
                   trial_interval_unit = SKIP,
                   archived_at = SKIP,
                   require_credit_card = SKIP,
                   return_params = SKIP,
                   taxable = SKIP,
                   update_return_url = SKIP,
                   initial_charge_after_trial = SKIP,
                   version_number = SKIP,
                   update_return_params = SKIP,
                   product_family = SKIP,
                   public_signup_pages = SKIP,
                   product_price_point_name = SKIP,
                   request_billing_address = SKIP,
                   require_billing_address = SKIP,
                   require_shipping_address = SKIP,
                   tax_code = SKIP,
                   default_product_price_point_id = SKIP,
                   use_site_exchange_rate = SKIP,
                   item_category = SKIP,
                   product_price_point_id = SKIP,
                   product_price_point_handle = SKIP)
      @id = id unless id == SKIP
      @name = name unless name == SKIP
      @handle = handle unless handle == SKIP
      @description = description unless description == SKIP
      @accounting_code = accounting_code unless accounting_code == SKIP
      @request_credit_card = request_credit_card unless request_credit_card == SKIP
      @expiration_interval = expiration_interval unless expiration_interval == SKIP
      @expiration_interval_unit = expiration_interval_unit unless expiration_interval_unit == SKIP
      @created_at = created_at unless created_at == SKIP
      @updated_at = updated_at unless updated_at == SKIP
      @price_in_cents = price_in_cents unless price_in_cents == SKIP
      @interval = interval unless interval == SKIP
      @interval_unit = interval_unit unless interval_unit == SKIP
      @initial_charge_in_cents = initial_charge_in_cents unless initial_charge_in_cents == SKIP
      @trial_price_in_cents = trial_price_in_cents unless trial_price_in_cents == SKIP
      @trial_interval = trial_interval unless trial_interval == SKIP
      @trial_interval_unit = trial_interval_unit unless trial_interval_unit == SKIP
      @archived_at = archived_at unless archived_at == SKIP
      @require_credit_card = require_credit_card unless require_credit_card == SKIP
      @return_params = return_params unless return_params == SKIP
      @taxable = taxable unless taxable == SKIP
      @update_return_url = update_return_url unless update_return_url == SKIP
      unless initial_charge_after_trial == SKIP
        @initial_charge_after_trial =
          initial_charge_after_trial
      end
      @version_number = version_number unless version_number == SKIP
      @update_return_params = update_return_params unless update_return_params == SKIP
      @product_family = product_family unless product_family == SKIP
      @public_signup_pages = public_signup_pages unless public_signup_pages == SKIP
      @product_price_point_name = product_price_point_name unless product_price_point_name == SKIP
      @request_billing_address = request_billing_address unless request_billing_address == SKIP
      @require_billing_address = require_billing_address unless require_billing_address == SKIP
      @require_shipping_address = require_shipping_address unless require_shipping_address == SKIP
      @tax_code = tax_code unless tax_code == SKIP
      unless default_product_price_point_id == SKIP
        @default_product_price_point_id =
          default_product_price_point_id
      end
      @use_site_exchange_rate = use_site_exchange_rate unless use_site_exchange_rate == SKIP
      @item_category = item_category unless item_category == SKIP
      @product_price_point_id = product_price_point_id unless product_price_point_id == SKIP
      unless product_price_point_handle == SKIP
        @product_price_point_handle =
          product_price_point_handle
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      handle = hash.key?('handle') ? hash['handle'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      accounting_code =
        hash.key?('accounting_code') ? hash['accounting_code'] : SKIP
      request_credit_card =
        hash.key?('request_credit_card') ? hash['request_credit_card'] : SKIP
      expiration_interval =
        hash.key?('expiration_interval') ? hash['expiration_interval'] : SKIP
      expiration_interval_unit = hash.key?('expiration_interval_unit') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:ProductExpirationIntervalUnit), hash['expiration_interval_unit']
      ) : SKIP
      created_at = hash.key?('created_at') ? hash['created_at'] : SKIP
      updated_at = hash.key?('updated_at') ? hash['updated_at'] : SKIP
      price_in_cents =
        hash.key?('price_in_cents') ? hash['price_in_cents'] : SKIP
      interval = hash.key?('interval') ? hash['interval'] : SKIP
      interval_unit = hash.key?('interval_unit') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:ProductIntervalUnit), hash['interval_unit']
      ) : SKIP
      initial_charge_in_cents =
        hash.key?('initial_charge_in_cents') ? hash['initial_charge_in_cents'] : SKIP
      trial_price_in_cents =
        hash.key?('trial_price_in_cents') ? hash['trial_price_in_cents'] : SKIP
      trial_interval =
        hash.key?('trial_interval') ? hash['trial_interval'] : SKIP
      trial_interval_unit = hash.key?('trial_interval_unit') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:ProductTrialIntervalUnit), hash['trial_interval_unit']
      ) : SKIP
      archived_at = hash.key?('archived_at') ? hash['archived_at'] : SKIP
      require_credit_card =
        hash.key?('require_credit_card') ? hash['require_credit_card'] : SKIP
      return_params = hash.key?('return_params') ? hash['return_params'] : SKIP
      taxable = hash.key?('taxable') ? hash['taxable'] : SKIP
      update_return_url =
        hash.key?('update_return_url') ? hash['update_return_url'] : SKIP
      initial_charge_after_trial =
        hash.key?('initial_charge_after_trial') ? hash['initial_charge_after_trial'] : SKIP
      version_number =
        hash.key?('version_number') ? hash['version_number'] : SKIP
      update_return_params =
        hash.key?('update_return_params') ? hash['update_return_params'] : SKIP
      product_family = ProductFamily.from_hash(hash['product_family']) if hash['product_family']
      # Parameter is an array, so we need to iterate through it
      public_signup_pages = nil
      unless hash['public_signup_pages'].nil?
        public_signup_pages = []
        hash['public_signup_pages'].each do |structure|
          public_signup_pages << (PublicSignupPage.from_hash(structure) if structure)
        end
      end

      public_signup_pages = SKIP unless hash.key?('public_signup_pages')
      product_price_point_name =
        hash.key?('product_price_point_name') ? hash['product_price_point_name'] : SKIP
      request_billing_address =
        hash.key?('request_billing_address') ? hash['request_billing_address'] : SKIP
      require_billing_address =
        hash.key?('require_billing_address') ? hash['require_billing_address'] : SKIP
      require_shipping_address =
        hash.key?('require_shipping_address') ? hash['require_shipping_address'] : SKIP
      tax_code = hash.key?('tax_code') ? hash['tax_code'] : SKIP
      default_product_price_point_id =
        hash.key?('default_product_price_point_id') ? hash['default_product_price_point_id'] : SKIP
      use_site_exchange_rate =
        hash.key?('use_site_exchange_rate') ? hash['use_site_exchange_rate'] : SKIP
      item_category = hash.key?('item_category') ? hash['item_category'] : SKIP
      product_price_point_id =
        hash.key?('product_price_point_id') ? hash['product_price_point_id'] : SKIP
      product_price_point_handle =
        hash.key?('product_price_point_handle') ? hash['product_price_point_handle'] : SKIP

      # Create object from extracted values.
      Product.new(id,
                  name,
                  handle,
                  description,
                  accounting_code,
                  request_credit_card,
                  expiration_interval,
                  expiration_interval_unit,
                  created_at,
                  updated_at,
                  price_in_cents,
                  interval,
                  interval_unit,
                  initial_charge_in_cents,
                  trial_price_in_cents,
                  trial_interval,
                  trial_interval_unit,
                  archived_at,
                  require_credit_card,
                  return_params,
                  taxable,
                  update_return_url,
                  initial_charge_after_trial,
                  version_number,
                  update_return_params,
                  product_family,
                  public_signup_pages,
                  product_price_point_name,
                  request_billing_address,
                  require_billing_address,
                  require_shipping_address,
                  tax_code,
                  default_product_price_point_id,
                  use_site_exchange_rate,
                  item_category,
                  product_price_point_id,
                  product_price_point_handle)
    end

    # Validates an instance of the object from a given value.
    # @param [Product | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end
  end
end
