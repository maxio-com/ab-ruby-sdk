# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # SubscriptionNote Model.
  class SubscriptionNote < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :body

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :subscription_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :updated_at

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :sticky

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['body'] = 'body'
      @_hash['subscription_id'] = 'subscription_id'
      @_hash['created_at'] = 'created_at'
      @_hash['updated_at'] = 'updated_at'
      @_hash['sticky'] = 'sticky'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        body
        subscription_id
        created_at
        updated_at
        sticky
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP,
                   body = SKIP,
                   subscription_id = SKIP,
                   created_at = SKIP,
                   updated_at = SKIP,
                   sticky = SKIP)
      @id = id unless id == SKIP
      @body = body unless body == SKIP
      @subscription_id = subscription_id unless subscription_id == SKIP
      @created_at = created_at unless created_at == SKIP
      @updated_at = updated_at unless updated_at == SKIP
      @sticky = sticky unless sticky == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      body = hash.key?('body') ? hash['body'] : SKIP
      subscription_id =
        hash.key?('subscription_id') ? hash['subscription_id'] : SKIP
      created_at = hash.key?('created_at') ? hash['created_at'] : SKIP
      updated_at = hash.key?('updated_at') ? hash['updated_at'] : SKIP
      sticky = hash.key?('sticky') ? hash['sticky'] : SKIP

      # Create object from extracted values.
      SubscriptionNote.new(id,
                           body,
                           subscription_id,
                           created_at,
                           updated_at,
                           sticky)
    end
  end
end
