# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # CouponRequest Model.
  class CouponRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [CouponPayload]
    attr_accessor :coupon

    # An object where the keys are product_ids and the values are booleans
    # indicating if the coupon should be applicable to the product
    # @return [Hash[String, TrueClass | FalseClass]]
    attr_accessor :restricted_products

    # An object where the keys are component_ids and the values are booleans
    # indicating if the coupon should be applicable to the component
    # @return [Hash[String, TrueClass | FalseClass]]
    attr_accessor :restricted_components

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['coupon'] = 'coupon'
      @_hash['restricted_products'] = 'restricted_products'
      @_hash['restricted_components'] = 'restricted_components'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        coupon
        restricted_products
        restricted_components
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(coupon: SKIP, restricted_products: SKIP,
                   restricted_components: SKIP, additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @coupon = coupon unless coupon == SKIP
      @restricted_products = restricted_products unless restricted_products == SKIP
      @restricted_components = restricted_components unless restricted_components == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      coupon = CouponPayload.from_hash(hash['coupon']) if hash['coupon']
      restricted_products =
        hash.key?('restricted_products') ? hash['restricted_products'] : SKIP
      restricted_components =
        hash.key?('restricted_components') ? hash['restricted_components'] : SKIP

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      CouponRequest.new(coupon: coupon,
                        restricted_products: restricted_products,
                        restricted_components: restricted_components,
                        additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} coupon: #{@coupon}, restricted_products: #{@restricted_products},"\
      " restricted_components: #{@restricted_components}, additional_properties:"\
      " #{get_additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} coupon: #{@coupon.inspect}, restricted_products:"\
      " #{@restricted_products.inspect}, restricted_components: #{@restricted_components.inspect},"\
      " additional_properties: #{get_additional_properties}>"
    end
  end
end
