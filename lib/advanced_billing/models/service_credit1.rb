# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module AdvancedBilling
  # ServiceCredit1 Model.
  class ServiceCredit1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # The amount in cents of the entry
    # @return [Integer]
    attr_accessor :amount_in_cents

    # The new balance for the credit account
    # @return [Integer]
    attr_accessor :ending_balance_in_cents

    # The type of entry
    # @return [ServiceCreditType]
    attr_accessor :entry_type

    # The memo attached to the entry
    # @return [String]
    attr_accessor :memo

    # The invoice uid associated with the entry. Only present for debit entries
    # @return [String]
    attr_accessor :invoice_uid

    # The remaining balance for the entry
    # @return [Integer]
    attr_accessor :remaining_balance_in_cents

    # The date and time the entry was created
    # @return [DateTime]
    attr_accessor :created_at

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['amount_in_cents'] = 'amount_in_cents'
      @_hash['ending_balance_in_cents'] = 'ending_balance_in_cents'
      @_hash['entry_type'] = 'entry_type'
      @_hash['memo'] = 'memo'
      @_hash['invoice_uid'] = 'invoice_uid'
      @_hash['remaining_balance_in_cents'] = 'remaining_balance_in_cents'
      @_hash['created_at'] = 'created_at'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        amount_in_cents
        ending_balance_in_cents
        entry_type
        memo
        invoice_uid
        remaining_balance_in_cents
        created_at
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        invoice_uid
      ]
    end

    def initialize(id: SKIP, amount_in_cents: SKIP,
                   ending_balance_in_cents: SKIP, entry_type: SKIP, memo: SKIP,
                   invoice_uid: SKIP, remaining_balance_in_cents: SKIP,
                   created_at: SKIP, additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @id = id unless id == SKIP
      @amount_in_cents = amount_in_cents unless amount_in_cents == SKIP
      @ending_balance_in_cents = ending_balance_in_cents unless ending_balance_in_cents == SKIP
      @entry_type = entry_type unless entry_type == SKIP
      @memo = memo unless memo == SKIP
      @invoice_uid = invoice_uid unless invoice_uid == SKIP
      unless remaining_balance_in_cents == SKIP
        @remaining_balance_in_cents =
          remaining_balance_in_cents
      end
      @created_at = created_at unless created_at == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      amount_in_cents =
        hash.key?('amount_in_cents') ? hash['amount_in_cents'] : SKIP
      ending_balance_in_cents =
        hash.key?('ending_balance_in_cents') ? hash['ending_balance_in_cents'] : SKIP
      entry_type = hash.key?('entry_type') ? hash['entry_type'] : SKIP
      memo = hash.key?('memo') ? hash['memo'] : SKIP
      invoice_uid = hash.key?('invoice_uid') ? hash['invoice_uid'] : SKIP
      remaining_balance_in_cents =
        hash.key?('remaining_balance_in_cents') ? hash['remaining_balance_in_cents'] : SKIP
      created_at = if hash.key?('created_at')
                     (DateTimeHelper.from_rfc3339(hash['created_at']) if hash['created_at'])
                   else
                     SKIP
                   end

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      ServiceCredit1.new(id: id,
                         amount_in_cents: amount_in_cents,
                         ending_balance_in_cents: ending_balance_in_cents,
                         entry_type: entry_type,
                         memo: memo,
                         invoice_uid: invoice_uid,
                         remaining_balance_in_cents: remaining_balance_in_cents,
                         created_at: created_at,
                         additional_properties: additional_properties)
    end

    def to_custom_created_at
      DateTimeHelper.to_rfc3339(created_at)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id}, amount_in_cents: #{@amount_in_cents}, ending_balance_in_cents:"\
      " #{@ending_balance_in_cents}, entry_type: #{@entry_type}, memo: #{@memo}, invoice_uid:"\
      " #{@invoice_uid}, remaining_balance_in_cents: #{@remaining_balance_in_cents}, created_at:"\
      " #{@created_at}, additional_properties: #{get_additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id.inspect}, amount_in_cents: #{@amount_in_cents.inspect},"\
      " ending_balance_in_cents: #{@ending_balance_in_cents.inspect}, entry_type:"\
      " #{@entry_type.inspect}, memo: #{@memo.inspect}, invoice_uid: #{@invoice_uid.inspect},"\
      " remaining_balance_in_cents: #{@remaining_balance_in_cents.inspect}, created_at:"\
      " #{@created_at.inspect}, additional_properties: #{get_additional_properties}>"
    end
  end
end
