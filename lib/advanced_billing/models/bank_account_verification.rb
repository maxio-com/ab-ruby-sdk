# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # BankAccountVerification Model.
  class BankAccountVerification < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :deposit_1_in_cents

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :deposit_2_in_cents

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['deposit_1_in_cents'] = 'deposit_1_in_cents'
      @_hash['deposit_2_in_cents'] = 'deposit_2_in_cents'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        deposit_1_in_cents
        deposit_2_in_cents
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(deposit_1_in_cents: SKIP, deposit_2_in_cents: SKIP,
                   additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @deposit_1_in_cents = deposit_1_in_cents unless deposit_1_in_cents == SKIP
      @deposit_2_in_cents = deposit_2_in_cents unless deposit_2_in_cents == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      deposit_1_in_cents =
        hash.key?('deposit_1_in_cents') ? hash['deposit_1_in_cents'] : SKIP
      deposit_2_in_cents =
        hash.key?('deposit_2_in_cents') ? hash['deposit_2_in_cents'] : SKIP

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      BankAccountVerification.new(deposit_1_in_cents: deposit_1_in_cents,
                                  deposit_2_in_cents: deposit_2_in_cents,
                                  additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} deposit_1_in_cents: #{@deposit_1_in_cents}, deposit_2_in_cents:"\
      " #{@deposit_2_in_cents}, additional_properties: #{get_additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} deposit_1_in_cents: #{@deposit_1_in_cents.inspect}, deposit_2_in_cents:"\
      " #{@deposit_2_in_cents.inspect}, additional_properties: #{get_additional_properties}>"
    end
  end
end
