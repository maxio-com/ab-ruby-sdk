# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # Object which contains subscription errors.
  class SubscriptionGroupSubscriptionError < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :product

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :product_price_point_id

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :payment_profile

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :payment_profile_chargify_token

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['product'] = 'product'
      @_hash['product_price_point_id'] = 'product_price_point_id'
      @_hash['payment_profile'] = 'payment_profile'
      @_hash['payment_profile_chargify_token'] =
        'payment_profile.chargify_token'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        product
        product_price_point_id
        payment_profile
        payment_profile_chargify_token
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(product = SKIP,
                   product_price_point_id = SKIP,
                   payment_profile = SKIP,
                   payment_profile_chargify_token = SKIP)
      @product = product unless product == SKIP
      @product_price_point_id = product_price_point_id unless product_price_point_id == SKIP
      @payment_profile = payment_profile unless payment_profile == SKIP
      unless payment_profile_chargify_token == SKIP
        @payment_profile_chargify_token =
          payment_profile_chargify_token
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      product = hash.key?('product') ? hash['product'] : SKIP
      product_price_point_id =
        hash.key?('product_price_point_id') ? hash['product_price_point_id'] : SKIP
      payment_profile =
        hash.key?('payment_profile') ? hash['payment_profile'] : SKIP
      payment_profile_chargify_token =
        hash.key?('payment_profile.chargify_token') ? hash['payment_profile.chargify_token'] : SKIP

      # Create object from extracted values.
      SubscriptionGroupSubscriptionError.new(product,
                                             product_price_point_id,
                                             payment_profile,
                                             payment_profile_chargify_token)
    end
  end
end
