# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # InvoicePaymentApplication Model.
  class InvoicePaymentApplication < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Unique identifier for the paid invoice. It has the prefix "inv_" followed
    # by alphanumeric characters.
    # @return [String]
    attr_accessor :invoice_uid

    # Unique identifier for the payment. It has the prefix "pmt_" followed by
    # alphanumeric characters.
    # @return [String]
    attr_accessor :application_uid

    # Dollar amount of the paid invoice.
    # @return [String]
    attr_accessor :applied_amount

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['invoice_uid'] = 'invoice_uid'
      @_hash['application_uid'] = 'application_uid'
      @_hash['applied_amount'] = 'applied_amount'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        invoice_uid
        application_uid
        applied_amount
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(invoice_uid = SKIP,
                   application_uid = SKIP,
                   applied_amount = SKIP)
      @invoice_uid = invoice_uid unless invoice_uid == SKIP
      @application_uid = application_uid unless application_uid == SKIP
      @applied_amount = applied_amount unless applied_amount == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      invoice_uid = hash.key?('invoice_uid') ? hash['invoice_uid'] : SKIP
      application_uid =
        hash.key?('application_uid') ? hash['application_uid'] : SKIP
      applied_amount =
        hash.key?('applied_amount') ? hash['applied_amount'] : SKIP

      # Create object from extracted values.
      InvoicePaymentApplication.new(invoice_uid,
                                    application_uid,
                                    applied_amount)
    end
  end
end
