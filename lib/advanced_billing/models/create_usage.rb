# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # CreateUsage Model.
  class CreateUsage < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # integer by default or decimal number if fractional quantities are enabled
    # for the component
    # @return [Float]
    attr_accessor :quantity

    # integer by default or decimal number if fractional quantities are enabled
    # for the component
    # @return [String]
    attr_accessor :price_point_id

    # integer by default or decimal number if fractional quantities are enabled
    # for the component
    # @return [String]
    attr_accessor :memo

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['quantity'] = 'quantity'
      @_hash['price_point_id'] = 'price_point_id'
      @_hash['memo'] = 'memo'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        quantity
        price_point_id
        memo
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(quantity = SKIP,
                   price_point_id = SKIP,
                   memo = SKIP)
      @quantity = quantity unless quantity == SKIP
      @price_point_id = price_point_id unless price_point_id == SKIP
      @memo = memo unless memo == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      quantity = hash.key?('quantity') ? hash['quantity'] : SKIP
      price_point_id =
        hash.key?('price_point_id') ? hash['price_point_id'] : SKIP
      memo = hash.key?('memo') ? hash['memo'] : SKIP

      # Create object from extracted values.
      CreateUsage.new(quantity,
                      price_point_id,
                      memo)
    end
  end
end
