# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module AdvancedBilling
  # FullSubscriptionGroupResponse Model.
  class FullSubscriptionGroupResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :uid

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :scheme

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :customer_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :payment_profile_id

    # TODO: Write general description for this method
    # @return [Array[Integer]]
    attr_accessor :subscription_ids

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :primary_subscription_id

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :next_assessment_at

    # The state of a subscription.
    # * **Live States**
    #     * `active` - A normal, active subscription. It is not in a trial and
    # is paid and up to date.
    #     * `assessing` - An internal (transient) state that indicates a
    # subscription is in the middle of periodic assessment. Do not base any
    # access decisions in your app on this state, as it may not always be
    # exposed.
    #     * `pending` - An internal (transient) state that indicates a
    # subscription is in the creation process. Do not base any access decisions
    # in your app on this state, as it may not always be exposed.
    #     * `trialing` - A subscription in trialing state has a valid trial
    # subscription. This type of subscription may transition to active once
    # payment is received when the trial has ended. Otherwise, it may go to a
    # Problem or End of Life state.
    #     * `paused` - An internal state that indicates that your account with
    # Advanced Billing is in arrears.
    # * **Problem States**
    #     * `past_due` - Indicates that the most recent payment has failed, and
    # payment is past due for this subscription. If you have enabled our
    # automated dunning, this subscription will be in the dunning process
    # (additional status and callbacks from the dunning process will be
    # available in the future). If you are handling dunning and payment updates
    # yourself, you will want to use this state to initiate a payment update
    # from your customers.
    #     * `soft_failure` - Indicates that normal assessment/processing of the
    # subscription has failed for a reason that cannot be fixed by the Customer.
    # For example, a Soft Fail may result from a timeout at the gateway or
    # incorrect credentials on your part. The subscriptions should be retried
    # automatically. An interface is being built for you to review problems
    # resulting from these events to take manual action when needed.
    #     * `unpaid` - Indicates an unpaid subscription. A subscription is
    # marked unpaid if the retry period expires and you have configured your
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) settings to have a Final Action of `mark the subscription unpaid`.
    # * **End of Life States**
    #     * `canceled` - Indicates a canceled subscription. This may happen at
    # your request (via the API or the web interface) or due to the expiration
    # of the
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) process without payment. See the
    # [Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/540455
    # 9291021) documentation for info on how to restart a canceled subscription.
    #     While a subscription is canceled, its period will not advance, it will
    # not accrue any new charges, and Advanced Billing will not attempt to
    # collect the overdue balance.
    #     * `expired` - Indicates a subscription that has expired due to running
    # its normal life cycle. Some products may be configured to have an
    # expiration period. An expired subscription then is one that stayed active
    # until it fulfilled its full period.
    #     * `failed_to_create` - Indicates that signup has failed. (You may see
    # this state in a signup_failure webhook.)
    #     * `on_hold` - Indicates that a subscription’s billing has been
    # temporarily stopped. While it is expected that the subscription will
    # resume and return to active status, this is still treated as an “End of
    # Life” state because the customer is not paying for services during this
    # time.
    #     * `suspended` - Indicates that a prepaid subscription has used up all
    # their prepayment balance. If a prepayment is applied, it will return to an
    # active state.
    #     * `trial_ended` - A subscription in a trial_ended state is a
    # subscription that completed a no-obligation trial and did not have a card
    # on file at the expiration of the trial period. See [Product Pricing – No
    # Obligation
    # Trials](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221
    # ) for more details.
    # See [Subscription
    # States](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404222005773
    # ) for more info about subscription states and state transitions.
    # @return [SubscriptionState]
    attr_accessor :state

    # The state of a subscription.
    # * **Live States**
    #     * `active` - A normal, active subscription. It is not in a trial and
    # is paid and up to date.
    #     * `assessing` - An internal (transient) state that indicates a
    # subscription is in the middle of periodic assessment. Do not base any
    # access decisions in your app on this state, as it may not always be
    # exposed.
    #     * `pending` - An internal (transient) state that indicates a
    # subscription is in the creation process. Do not base any access decisions
    # in your app on this state, as it may not always be exposed.
    #     * `trialing` - A subscription in trialing state has a valid trial
    # subscription. This type of subscription may transition to active once
    # payment is received when the trial has ended. Otherwise, it may go to a
    # Problem or End of Life state.
    #     * `paused` - An internal state that indicates that your account with
    # Advanced Billing is in arrears.
    # * **Problem States**
    #     * `past_due` - Indicates that the most recent payment has failed, and
    # payment is past due for this subscription. If you have enabled our
    # automated dunning, this subscription will be in the dunning process
    # (additional status and callbacks from the dunning process will be
    # available in the future). If you are handling dunning and payment updates
    # yourself, you will want to use this state to initiate a payment update
    # from your customers.
    #     * `soft_failure` - Indicates that normal assessment/processing of the
    # subscription has failed for a reason that cannot be fixed by the Customer.
    # For example, a Soft Fail may result from a timeout at the gateway or
    # incorrect credentials on your part. The subscriptions should be retried
    # automatically. An interface is being built for you to review problems
    # resulting from these events to take manual action when needed.
    #     * `unpaid` - Indicates an unpaid subscription. A subscription is
    # marked unpaid if the retry period expires and you have configured your
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) settings to have a Final Action of `mark the subscription unpaid`.
    # * **End of Life States**
    #     * `canceled` - Indicates a canceled subscription. This may happen at
    # your request (via the API or the web interface) or due to the expiration
    # of the
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) process without payment. See the
    # [Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/540455
    # 9291021) documentation for info on how to restart a canceled subscription.
    #     While a subscription is canceled, its period will not advance, it will
    # not accrue any new charges, and Advanced Billing will not attempt to
    # collect the overdue balance.
    #     * `expired` - Indicates a subscription that has expired due to running
    # its normal life cycle. Some products may be configured to have an
    # expiration period. An expired subscription then is one that stayed active
    # until it fulfilled its full period.
    #     * `failed_to_create` - Indicates that signup has failed. (You may see
    # this state in a signup_failure webhook.)
    #     * `on_hold` - Indicates that a subscription’s billing has been
    # temporarily stopped. While it is expected that the subscription will
    # resume and return to active status, this is still treated as an “End of
    # Life” state because the customer is not paying for services during this
    # time.
    #     * `suspended` - Indicates that a prepaid subscription has used up all
    # their prepayment balance. If a prepayment is applied, it will return to an
    # active state.
    #     * `trial_ended` - A subscription in a trial_ended state is a
    # subscription that completed a no-obligation trial and did not have a card
    # on file at the expiration of the trial period. See [Product Pricing – No
    # Obligation
    # Trials](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221
    # ) for more details.
    # See [Subscription
    # States](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404222005773
    # ) for more info about subscription states and state transitions.
    # @return [TrueClass | FalseClass]
    attr_accessor :cancel_at_end_of_period

    # The state of a subscription.
    # * **Live States**
    #     * `active` - A normal, active subscription. It is not in a trial and
    # is paid and up to date.
    #     * `assessing` - An internal (transient) state that indicates a
    # subscription is in the middle of periodic assessment. Do not base any
    # access decisions in your app on this state, as it may not always be
    # exposed.
    #     * `pending` - An internal (transient) state that indicates a
    # subscription is in the creation process. Do not base any access decisions
    # in your app on this state, as it may not always be exposed.
    #     * `trialing` - A subscription in trialing state has a valid trial
    # subscription. This type of subscription may transition to active once
    # payment is received when the trial has ended. Otherwise, it may go to a
    # Problem or End of Life state.
    #     * `paused` - An internal state that indicates that your account with
    # Advanced Billing is in arrears.
    # * **Problem States**
    #     * `past_due` - Indicates that the most recent payment has failed, and
    # payment is past due for this subscription. If you have enabled our
    # automated dunning, this subscription will be in the dunning process
    # (additional status and callbacks from the dunning process will be
    # available in the future). If you are handling dunning and payment updates
    # yourself, you will want to use this state to initiate a payment update
    # from your customers.
    #     * `soft_failure` - Indicates that normal assessment/processing of the
    # subscription has failed for a reason that cannot be fixed by the Customer.
    # For example, a Soft Fail may result from a timeout at the gateway or
    # incorrect credentials on your part. The subscriptions should be retried
    # automatically. An interface is being built for you to review problems
    # resulting from these events to take manual action when needed.
    #     * `unpaid` - Indicates an unpaid subscription. A subscription is
    # marked unpaid if the retry period expires and you have configured your
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) settings to have a Final Action of `mark the subscription unpaid`.
    # * **End of Life States**
    #     * `canceled` - Indicates a canceled subscription. This may happen at
    # your request (via the API or the web interface) or due to the expiration
    # of the
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) process without payment. See the
    # [Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/540455
    # 9291021) documentation for info on how to restart a canceled subscription.
    #     While a subscription is canceled, its period will not advance, it will
    # not accrue any new charges, and Advanced Billing will not attempt to
    # collect the overdue balance.
    #     * `expired` - Indicates a subscription that has expired due to running
    # its normal life cycle. Some products may be configured to have an
    # expiration period. An expired subscription then is one that stayed active
    # until it fulfilled its full period.
    #     * `failed_to_create` - Indicates that signup has failed. (You may see
    # this state in a signup_failure webhook.)
    #     * `on_hold` - Indicates that a subscription’s billing has been
    # temporarily stopped. While it is expected that the subscription will
    # resume and return to active status, this is still treated as an “End of
    # Life” state because the customer is not paying for services during this
    # time.
    #     * `suspended` - Indicates that a prepaid subscription has used up all
    # their prepayment balance. If a prepayment is applied, it will return to an
    # active state.
    #     * `trial_ended` - A subscription in a trial_ended state is a
    # subscription that completed a no-obligation trial and did not have a card
    # on file at the expiration of the trial period. See [Product Pricing – No
    # Obligation
    # Trials](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221
    # ) for more details.
    # See [Subscription
    # States](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404222005773
    # ) for more info about subscription states and state transitions.
    # @return [Integer]
    attr_accessor :current_billing_amount_in_cents

    # The state of a subscription.
    # * **Live States**
    #     * `active` - A normal, active subscription. It is not in a trial and
    # is paid and up to date.
    #     * `assessing` - An internal (transient) state that indicates a
    # subscription is in the middle of periodic assessment. Do not base any
    # access decisions in your app on this state, as it may not always be
    # exposed.
    #     * `pending` - An internal (transient) state that indicates a
    # subscription is in the creation process. Do not base any access decisions
    # in your app on this state, as it may not always be exposed.
    #     * `trialing` - A subscription in trialing state has a valid trial
    # subscription. This type of subscription may transition to active once
    # payment is received when the trial has ended. Otherwise, it may go to a
    # Problem or End of Life state.
    #     * `paused` - An internal state that indicates that your account with
    # Advanced Billing is in arrears.
    # * **Problem States**
    #     * `past_due` - Indicates that the most recent payment has failed, and
    # payment is past due for this subscription. If you have enabled our
    # automated dunning, this subscription will be in the dunning process
    # (additional status and callbacks from the dunning process will be
    # available in the future). If you are handling dunning and payment updates
    # yourself, you will want to use this state to initiate a payment update
    # from your customers.
    #     * `soft_failure` - Indicates that normal assessment/processing of the
    # subscription has failed for a reason that cannot be fixed by the Customer.
    # For example, a Soft Fail may result from a timeout at the gateway or
    # incorrect credentials on your part. The subscriptions should be retried
    # automatically. An interface is being built for you to review problems
    # resulting from these events to take manual action when needed.
    #     * `unpaid` - Indicates an unpaid subscription. A subscription is
    # marked unpaid if the retry period expires and you have configured your
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) settings to have a Final Action of `mark the subscription unpaid`.
    # * **End of Life States**
    #     * `canceled` - Indicates a canceled subscription. This may happen at
    # your request (via the API or the web interface) or due to the expiration
    # of the
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) process without payment. See the
    # [Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/540455
    # 9291021) documentation for info on how to restart a canceled subscription.
    #     While a subscription is canceled, its period will not advance, it will
    # not accrue any new charges, and Advanced Billing will not attempt to
    # collect the overdue balance.
    #     * `expired` - Indicates a subscription that has expired due to running
    # its normal life cycle. Some products may be configured to have an
    # expiration period. An expired subscription then is one that stayed active
    # until it fulfilled its full period.
    #     * `failed_to_create` - Indicates that signup has failed. (You may see
    # this state in a signup_failure webhook.)
    #     * `on_hold` - Indicates that a subscription’s billing has been
    # temporarily stopped. While it is expected that the subscription will
    # resume and return to active status, this is still treated as an “End of
    # Life” state because the customer is not paying for services during this
    # time.
    #     * `suspended` - Indicates that a prepaid subscription has used up all
    # their prepayment balance. If a prepayment is applied, it will return to an
    # active state.
    #     * `trial_ended` - A subscription in a trial_ended state is a
    # subscription that completed a no-obligation trial and did not have a card
    # on file at the expiration of the trial period. See [Product Pricing – No
    # Obligation
    # Trials](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221
    # ) for more details.
    # See [Subscription
    # States](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404222005773
    # ) for more info about subscription states and state transitions.
    # @return [SubscriptionGroupCustomer]
    attr_accessor :customer

    # The state of a subscription.
    # * **Live States**
    #     * `active` - A normal, active subscription. It is not in a trial and
    # is paid and up to date.
    #     * `assessing` - An internal (transient) state that indicates a
    # subscription is in the middle of periodic assessment. Do not base any
    # access decisions in your app on this state, as it may not always be
    # exposed.
    #     * `pending` - An internal (transient) state that indicates a
    # subscription is in the creation process. Do not base any access decisions
    # in your app on this state, as it may not always be exposed.
    #     * `trialing` - A subscription in trialing state has a valid trial
    # subscription. This type of subscription may transition to active once
    # payment is received when the trial has ended. Otherwise, it may go to a
    # Problem or End of Life state.
    #     * `paused` - An internal state that indicates that your account with
    # Advanced Billing is in arrears.
    # * **Problem States**
    #     * `past_due` - Indicates that the most recent payment has failed, and
    # payment is past due for this subscription. If you have enabled our
    # automated dunning, this subscription will be in the dunning process
    # (additional status and callbacks from the dunning process will be
    # available in the future). If you are handling dunning and payment updates
    # yourself, you will want to use this state to initiate a payment update
    # from your customers.
    #     * `soft_failure` - Indicates that normal assessment/processing of the
    # subscription has failed for a reason that cannot be fixed by the Customer.
    # For example, a Soft Fail may result from a timeout at the gateway or
    # incorrect credentials on your part. The subscriptions should be retried
    # automatically. An interface is being built for you to review problems
    # resulting from these events to take manual action when needed.
    #     * `unpaid` - Indicates an unpaid subscription. A subscription is
    # marked unpaid if the retry period expires and you have configured your
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) settings to have a Final Action of `mark the subscription unpaid`.
    # * **End of Life States**
    #     * `canceled` - Indicates a canceled subscription. This may happen at
    # your request (via the API or the web interface) or due to the expiration
    # of the
    # [Dunning](https://maxio-chargify.zendesk.com/hc/en-us/articles/54055051410
    # 05) process without payment. See the
    # [Reactivation](https://maxio-chargify.zendesk.com/hc/en-us/articles/540455
    # 9291021) documentation for info on how to restart a canceled subscription.
    #     While a subscription is canceled, its period will not advance, it will
    # not accrue any new charges, and Advanced Billing will not attempt to
    # collect the overdue balance.
    #     * `expired` - Indicates a subscription that has expired due to running
    # its normal life cycle. Some products may be configured to have an
    # expiration period. An expired subscription then is one that stayed active
    # until it fulfilled its full period.
    #     * `failed_to_create` - Indicates that signup has failed. (You may see
    # this state in a signup_failure webhook.)
    #     * `on_hold` - Indicates that a subscription’s billing has been
    # temporarily stopped. While it is expected that the subscription will
    # resume and return to active status, this is still treated as an “End of
    # Life” state because the customer is not paying for services during this
    # time.
    #     * `suspended` - Indicates that a prepaid subscription has used up all
    # their prepayment balance. If a prepayment is applied, it will return to an
    # active state.
    #     * `trial_ended` - A subscription in a trial_ended state is a
    # subscription that completed a no-obligation trial and did not have a card
    # on file at the expiration of the trial period. See [Product Pricing – No
    # Obligation
    # Trials](https://maxio-chargify.zendesk.com/hc/en-us/articles/5405246782221
    # ) for more details.
    # See [Subscription
    # States](https://maxio-chargify.zendesk.com/hc/en-us/articles/5404222005773
    # ) for more info about subscription states and state transitions.
    # @return [SubscriptionGroupBalances]
    attr_accessor :account_balances

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['uid'] = 'uid'
      @_hash['scheme'] = 'scheme'
      @_hash['customer_id'] = 'customer_id'
      @_hash['payment_profile_id'] = 'payment_profile_id'
      @_hash['subscription_ids'] = 'subscription_ids'
      @_hash['primary_subscription_id'] = 'primary_subscription_id'
      @_hash['next_assessment_at'] = 'next_assessment_at'
      @_hash['state'] = 'state'
      @_hash['cancel_at_end_of_period'] = 'cancel_at_end_of_period'
      @_hash['current_billing_amount_in_cents'] =
        'current_billing_amount_in_cents'
      @_hash['customer'] = 'customer'
      @_hash['account_balances'] = 'account_balances'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        uid
        scheme
        customer_id
        payment_profile_id
        subscription_ids
        primary_subscription_id
        next_assessment_at
        state
        cancel_at_end_of_period
        current_billing_amount_in_cents
        customer
        account_balances
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(uid = SKIP,
                   scheme = SKIP,
                   customer_id = SKIP,
                   payment_profile_id = SKIP,
                   subscription_ids = SKIP,
                   primary_subscription_id = SKIP,
                   next_assessment_at = SKIP,
                   state = SKIP,
                   cancel_at_end_of_period = SKIP,
                   current_billing_amount_in_cents = SKIP,
                   customer = SKIP,
                   account_balances = SKIP,
                   additional_properties = {})
      @uid = uid unless uid == SKIP
      @scheme = scheme unless scheme == SKIP
      @customer_id = customer_id unless customer_id == SKIP
      @payment_profile_id = payment_profile_id unless payment_profile_id == SKIP
      @subscription_ids = subscription_ids unless subscription_ids == SKIP
      @primary_subscription_id = primary_subscription_id unless primary_subscription_id == SKIP
      @next_assessment_at = next_assessment_at unless next_assessment_at == SKIP
      @state = state unless state == SKIP
      @cancel_at_end_of_period = cancel_at_end_of_period unless cancel_at_end_of_period == SKIP
      unless current_billing_amount_in_cents == SKIP
        @current_billing_amount_in_cents =
          current_billing_amount_in_cents
      end
      @customer = customer unless customer == SKIP
      @account_balances = account_balances unless account_balances == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      uid = hash.key?('uid') ? hash['uid'] : SKIP
      scheme = hash.key?('scheme') ? hash['scheme'] : SKIP
      customer_id = hash.key?('customer_id') ? hash['customer_id'] : SKIP
      payment_profile_id =
        hash.key?('payment_profile_id') ? hash['payment_profile_id'] : SKIP
      subscription_ids =
        hash.key?('subscription_ids') ? hash['subscription_ids'] : SKIP
      primary_subscription_id =
        hash.key?('primary_subscription_id') ? hash['primary_subscription_id'] : SKIP
      next_assessment_at = if hash.key?('next_assessment_at')
                             (DateTimeHelper.from_rfc3339(hash['next_assessment_at']) if hash['next_assessment_at'])
                           else
                             SKIP
                           end
      state = hash.key?('state') ? hash['state'] : SKIP
      cancel_at_end_of_period =
        hash.key?('cancel_at_end_of_period') ? hash['cancel_at_end_of_period'] : SKIP
      current_billing_amount_in_cents =
        hash.key?('current_billing_amount_in_cents') ? hash['current_billing_amount_in_cents'] : SKIP
      customer = SubscriptionGroupCustomer.from_hash(hash['customer']) if hash['customer']
      account_balances = SubscriptionGroupBalances.from_hash(hash['account_balances']) if
        hash['account_balances']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      FullSubscriptionGroupResponse.new(uid,
                                        scheme,
                                        customer_id,
                                        payment_profile_id,
                                        subscription_ids,
                                        primary_subscription_id,
                                        next_assessment_at,
                                        state,
                                        cancel_at_end_of_period,
                                        current_billing_amount_in_cents,
                                        customer,
                                        account_balances,
                                        hash)
    end

    def to_custom_next_assessment_at
      DateTimeHelper.to_rfc3339(next_assessment_at)
    end
  end
end
