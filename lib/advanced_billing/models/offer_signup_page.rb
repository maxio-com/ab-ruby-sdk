# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # OfferSignupPage Model.
  class OfferSignupPage < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :nickname

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :enabled

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :return_url

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :return_params

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :url

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['nickname'] = 'nickname'
      @_hash['enabled'] = 'enabled'
      @_hash['return_url'] = 'return_url'
      @_hash['return_params'] = 'return_params'
      @_hash['url'] = 'url'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        nickname
        enabled
        return_url
        return_params
        url
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP,
                   nickname = SKIP,
                   enabled = SKIP,
                   return_url = SKIP,
                   return_params = SKIP,
                   url = SKIP)
      @id = id unless id == SKIP
      @nickname = nickname unless nickname == SKIP
      @enabled = enabled unless enabled == SKIP
      @return_url = return_url unless return_url == SKIP
      @return_params = return_params unless return_params == SKIP
      @url = url unless url == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      nickname = hash.key?('nickname') ? hash['nickname'] : SKIP
      enabled = hash.key?('enabled') ? hash['enabled'] : SKIP
      return_url = hash.key?('return_url') ? hash['return_url'] : SKIP
      return_params = hash.key?('return_params') ? hash['return_params'] : SKIP
      url = hash.key?('url') ? hash['url'] : SKIP

      # Create object from extracted values.
      OfferSignupPage.new(id,
                          nickname,
                          enabled,
                          return_url,
                          return_params,
                          url)
    end
  end
end
