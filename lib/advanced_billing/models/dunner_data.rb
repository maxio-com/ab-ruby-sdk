# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # DunnerData Model.
  class DunnerData < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :state

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :subscription_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :revenue_at_risk_in_cents

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :attempts

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_attempted_at

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['state'] = 'state'
      @_hash['subscription_id'] = 'subscription_id'
      @_hash['revenue_at_risk_in_cents'] = 'revenue_at_risk_in_cents'
      @_hash['created_at'] = 'created_at'
      @_hash['attempts'] = 'attempts'
      @_hash['last_attempted_at'] = 'last_attempted_at'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(state = nil,
                   subscription_id = nil,
                   revenue_at_risk_in_cents = nil,
                   created_at = nil,
                   attempts = nil,
                   last_attempted_at = nil)
      @state = state
      @subscription_id = subscription_id
      @revenue_at_risk_in_cents = revenue_at_risk_in_cents
      @created_at = created_at
      @attempts = attempts
      @last_attempted_at = last_attempted_at
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      state = hash.key?('state') ? hash['state'] : nil
      subscription_id =
        hash.key?('subscription_id') ? hash['subscription_id'] : nil
      revenue_at_risk_in_cents =
        hash.key?('revenue_at_risk_in_cents') ? hash['revenue_at_risk_in_cents'] : nil
      created_at = hash.key?('created_at') ? hash['created_at'] : nil
      attempts = hash.key?('attempts') ? hash['attempts'] : nil
      last_attempted_at =
        hash.key?('last_attempted_at') ? hash['last_attempted_at'] : nil

      # Create object from extracted values.
      DunnerData.new(state,
                     subscription_id,
                     revenue_at_risk_in_cents,
                     created_at,
                     attempts,
                     last_attempted_at)
    end
  end
end
