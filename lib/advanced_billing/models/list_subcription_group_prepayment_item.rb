# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module AdvancedBilling
  # ListSubcriptionGroupPrepaymentItem Model.
  class ListSubcriptionGroupPrepaymentItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :subscription_group_uid

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :amount_in_cents

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :remaining_amount_in_cents

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :details

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :external

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :memo

    # TODO: Write general description for this method
    # @return [PrepaymentMethod]
    attr_accessor :payment_type

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :created_at

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['subscription_group_uid'] = 'subscription_group_uid'
      @_hash['amount_in_cents'] = 'amount_in_cents'
      @_hash['remaining_amount_in_cents'] = 'remaining_amount_in_cents'
      @_hash['details'] = 'details'
      @_hash['external'] = 'external'
      @_hash['memo'] = 'memo'
      @_hash['payment_type'] = 'payment_type'
      @_hash['created_at'] = 'created_at'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        subscription_group_uid
        amount_in_cents
        remaining_amount_in_cents
        details
        external
        memo
        payment_type
        created_at
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id: SKIP, subscription_group_uid: SKIP,
                   amount_in_cents: SKIP, remaining_amount_in_cents: SKIP,
                   details: SKIP, external: SKIP, memo: SKIP,
                   payment_type: SKIP, created_at: SKIP,
                   additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @id = id unless id == SKIP
      @subscription_group_uid = subscription_group_uid unless subscription_group_uid == SKIP
      @amount_in_cents = amount_in_cents unless amount_in_cents == SKIP
      unless remaining_amount_in_cents == SKIP
        @remaining_amount_in_cents =
          remaining_amount_in_cents
      end
      @details = details unless details == SKIP
      @external = external unless external == SKIP
      @memo = memo unless memo == SKIP
      @payment_type = payment_type unless payment_type == SKIP
      @created_at = created_at unless created_at == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      subscription_group_uid =
        hash.key?('subscription_group_uid') ? hash['subscription_group_uid'] : SKIP
      amount_in_cents =
        hash.key?('amount_in_cents') ? hash['amount_in_cents'] : SKIP
      remaining_amount_in_cents =
        hash.key?('remaining_amount_in_cents') ? hash['remaining_amount_in_cents'] : SKIP
      details = hash.key?('details') ? hash['details'] : SKIP
      external = hash.key?('external') ? hash['external'] : SKIP
      memo = hash.key?('memo') ? hash['memo'] : SKIP
      payment_type = hash.key?('payment_type') ? hash['payment_type'] : SKIP
      created_at = if hash.key?('created_at')
                     (DateTimeHelper.from_rfc3339(hash['created_at']) if hash['created_at'])
                   else
                     SKIP
                   end

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      ListSubcriptionGroupPrepaymentItem.new(id: id,
                                             subscription_group_uid: subscription_group_uid,
                                             amount_in_cents: amount_in_cents,
                                             remaining_amount_in_cents: remaining_amount_in_cents,
                                             details: details,
                                             external: external,
                                             memo: memo,
                                             payment_type: payment_type,
                                             created_at: created_at,
                                             additional_properties: additional_properties)
    end

    def to_custom_created_at
      DateTimeHelper.to_rfc3339(created_at)
    end
  end
end
