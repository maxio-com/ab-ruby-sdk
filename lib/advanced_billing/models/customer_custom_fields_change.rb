# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # CustomerCustomFieldsChange Model.
  class CustomerCustomFieldsChange < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[ProformaCustomField]]
    attr_accessor :before

    # TODO: Write general description for this method
    # @return [Array[ProformaCustomField]]
    attr_accessor :after

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['before'] = 'before'
      @_hash['after'] = 'after'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        before
        after
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(before = SKIP,
                   after = SKIP)
      @before = before unless before == SKIP
      @after = after unless after == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      before = nil
      unless hash['before'].nil?
        before = []
        hash['before'].each do |structure|
          before << (ProformaCustomField.from_hash(structure) if structure)
        end
      end

      before = SKIP unless hash.key?('before')
      # Parameter is an array, so we need to iterate through it
      after = nil
      unless hash['after'].nil?
        after = []
        hash['after'].each do |structure|
          after << (ProformaCustomField.from_hash(structure) if structure)
        end
      end

      after = SKIP unless hash.key?('after')

      # Create object from extracted values.
      CustomerCustomFieldsChange.new(before,
                                     after)
    end
  end
end
