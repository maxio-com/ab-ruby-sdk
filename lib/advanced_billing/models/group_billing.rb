# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # Optional attributes related to billing date and accrual. Note: Only
  # applicable for new subscriptions.
  class GroupBilling < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A flag indicating whether or not to accrue charges on the new
    # subscription.
    # @return [TrueClass | FalseClass]
    attr_accessor :accrue

    # A flag indicating whether or not to align the billing date of the new
    # subscription with the billing date of the primary subscription of the
    # hierarchy's default subscription group. Required to be true if prorate is
    # also true.
    # @return [TrueClass | FalseClass]
    attr_accessor :align_date

    # A flag indicating whether or not to prorate billing of the new
    # subscription for the current period. A value of true is ignored unless
    # align_date is also true.
    # @return [TrueClass | FalseClass]
    attr_accessor :prorate

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['accrue'] = 'accrue'
      @_hash['align_date'] = 'align_date'
      @_hash['prorate'] = 'prorate'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        accrue
        align_date
        prorate
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(accrue = false,
                   align_date = false,
                   prorate = false)
      @accrue = accrue unless accrue == SKIP
      @align_date = align_date unless align_date == SKIP
      @prorate = prorate unless prorate == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      accrue = hash['accrue'] ||= false
      align_date = hash['align_date'] ||= false
      prorate = hash['prorate'] ||= false

      # Create object from extracted values.
      GroupBilling.new(accrue,
                       align_date,
                       prorate)
    end
  end
end
