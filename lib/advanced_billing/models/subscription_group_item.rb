# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # SubscriptionGroupItem Model.
  class SubscriptionGroupItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :reference

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :product_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :product_handle

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :product_price_point_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :product_price_point_handle

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :currency

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :coupon_code

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :total_revenue_in_cents

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :balance_in_cents

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['reference'] = 'reference'
      @_hash['product_id'] = 'product_id'
      @_hash['product_handle'] = 'product_handle'
      @_hash['product_price_point_id'] = 'product_price_point_id'
      @_hash['product_price_point_handle'] = 'product_price_point_handle'
      @_hash['currency'] = 'currency'
      @_hash['coupon_code'] = 'coupon_code'
      @_hash['total_revenue_in_cents'] = 'total_revenue_in_cents'
      @_hash['balance_in_cents'] = 'balance_in_cents'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        reference
        product_id
        product_handle
        product_price_point_id
        product_price_point_handle
        currency
        coupon_code
        total_revenue_in_cents
        balance_in_cents
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        reference
        product_handle
        coupon_code
      ]
    end

    def initialize(id = SKIP,
                   reference = SKIP,
                   product_id = SKIP,
                   product_handle = SKIP,
                   product_price_point_id = SKIP,
                   product_price_point_handle = SKIP,
                   currency = SKIP,
                   coupon_code = SKIP,
                   total_revenue_in_cents = SKIP,
                   balance_in_cents = SKIP)
      @id = id unless id == SKIP
      @reference = reference unless reference == SKIP
      @product_id = product_id unless product_id == SKIP
      @product_handle = product_handle unless product_handle == SKIP
      @product_price_point_id = product_price_point_id unless product_price_point_id == SKIP
      unless product_price_point_handle == SKIP
        @product_price_point_handle =
          product_price_point_handle
      end
      @currency = currency unless currency == SKIP
      @coupon_code = coupon_code unless coupon_code == SKIP
      @total_revenue_in_cents = total_revenue_in_cents unless total_revenue_in_cents == SKIP
      @balance_in_cents = balance_in_cents unless balance_in_cents == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      reference = hash.key?('reference') ? hash['reference'] : SKIP
      product_id = hash.key?('product_id') ? hash['product_id'] : SKIP
      product_handle =
        hash.key?('product_handle') ? hash['product_handle'] : SKIP
      product_price_point_id =
        hash.key?('product_price_point_id') ? hash['product_price_point_id'] : SKIP
      product_price_point_handle =
        hash.key?('product_price_point_handle') ? hash['product_price_point_handle'] : SKIP
      currency = hash.key?('currency') ? hash['currency'] : SKIP
      coupon_code = hash.key?('coupon_code') ? hash['coupon_code'] : SKIP
      total_revenue_in_cents =
        hash.key?('total_revenue_in_cents') ? hash['total_revenue_in_cents'] : SKIP
      balance_in_cents =
        hash.key?('balance_in_cents') ? hash['balance_in_cents'] : SKIP

      # Create object from extracted values.
      SubscriptionGroupItem.new(id,
                                reference,
                                product_id,
                                product_handle,
                                product_price_point_id,
                                product_price_point_handle,
                                currency,
                                coupon_code,
                                total_revenue_in_cents,
                                balance_in_cents)
    end
  end
end
