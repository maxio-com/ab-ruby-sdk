# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # SubscriptionGroupCustomer Model.
  class SubscriptionGroupCustomer < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :first_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :organization

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :reference

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['first_name'] = 'first_name'
      @_hash['last_name'] = 'last_name'
      @_hash['organization'] = 'organization'
      @_hash['email'] = 'email'
      @_hash['reference'] = 'reference'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        first_name
        last_name
        organization
        email
        reference
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(first_name: SKIP, last_name: SKIP, organization: SKIP,
                   email: SKIP, reference: SKIP, additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @first_name = first_name unless first_name == SKIP
      @last_name = last_name unless last_name == SKIP
      @organization = organization unless organization == SKIP
      @email = email unless email == SKIP
      @reference = reference unless reference == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      first_name = hash.key?('first_name') ? hash['first_name'] : SKIP
      last_name = hash.key?('last_name') ? hash['last_name'] : SKIP
      organization = hash.key?('organization') ? hash['organization'] : SKIP
      email = hash.key?('email') ? hash['email'] : SKIP
      reference = hash.key?('reference') ? hash['reference'] : SKIP

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      SubscriptionGroupCustomer.new(first_name: first_name,
                                    last_name: last_name,
                                    organization: organization,
                                    email: email,
                                    reference: reference,
                                    additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} first_name: #{@first_name}, last_name: #{@last_name}, organization:"\
      " #{@organization}, email: #{@email}, reference: #{@reference}, additional_properties:"\
      " #{get_additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} first_name: #{@first_name.inspect}, last_name: #{@last_name.inspect},"\
      " organization: #{@organization.inspect}, email: #{@email.inspect}, reference:"\
      " #{@reference.inspect}, additional_properties: #{get_additional_properties}>"
    end
  end
end
