# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # OrganizationAddress Model.
  class OrganizationAddress < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :street

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :line2

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :city

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :state

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :zip

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :country

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :phone

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['street'] = 'street'
      @_hash['line2'] = 'line2'
      @_hash['city'] = 'city'
      @_hash['state'] = 'state'
      @_hash['zip'] = 'zip'
      @_hash['country'] = 'country'
      @_hash['name'] = 'name'
      @_hash['phone'] = 'phone'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        street
        line2
        city
        state
        zip
        country
        name
        phone
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        street
        line2
        city
        state
        zip
        country
        name
        phone
      ]
    end

    def initialize(street = SKIP,
                   line2 = SKIP,
                   city = SKIP,
                   state = SKIP,
                   zip = SKIP,
                   country = SKIP,
                   name = SKIP,
                   phone = SKIP)
      @street = street unless street == SKIP
      @line2 = line2 unless line2 == SKIP
      @city = city unless city == SKIP
      @state = state unless state == SKIP
      @zip = zip unless zip == SKIP
      @country = country unless country == SKIP
      @name = name unless name == SKIP
      @phone = phone unless phone == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      street = hash.key?('street') ? hash['street'] : SKIP
      line2 = hash.key?('line2') ? hash['line2'] : SKIP
      city = hash.key?('city') ? hash['city'] : SKIP
      state = hash.key?('state') ? hash['state'] : SKIP
      zip = hash.key?('zip') ? hash['zip'] : SKIP
      country = hash.key?('country') ? hash['country'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      phone = hash.key?('phone') ? hash['phone'] : SKIP

      # Create object from extracted values.
      OrganizationAddress.new(street,
                              line2,
                              city,
                              state,
                              zip,
                              country,
                              name,
                              phone)
    end
  end
end
