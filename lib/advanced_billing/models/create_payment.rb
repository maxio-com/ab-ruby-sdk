# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # CreatePayment Model.
  class CreatePayment < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :memo

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :payment_details

    # The type of payment method used. Defaults to other.
    # @return [InvoicePaymentMethodType]
    attr_accessor :payment_method

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['amount'] = 'amount'
      @_hash['memo'] = 'memo'
      @_hash['payment_details'] = 'payment_details'
      @_hash['payment_method'] = 'payment_method'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(amount:, memo:, payment_details:, payment_method:,
                   additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @amount = amount
      @memo = memo
      @payment_details = payment_details
      @payment_method = payment_method
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      amount = hash.key?('amount') ? hash['amount'] : nil
      memo = hash.key?('memo') ? hash['memo'] : nil
      payment_details =
        hash.key?('payment_details') ? hash['payment_details'] : nil
      payment_method =
        hash.key?('payment_method') ? hash['payment_method'] : nil

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      CreatePayment.new(amount: amount,
                        memo: memo,
                        payment_details: payment_details,
                        payment_method: payment_method,
                        additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} amount: #{@amount}, memo: #{@memo}, payment_details: #{@payment_details},"\
      " payment_method: #{@payment_method}, additional_properties: #{get_additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} amount: #{@amount.inspect}, memo: #{@memo.inspect}, payment_details:"\
      " #{@payment_details.inspect}, payment_method: #{@payment_method.inspect},"\
      " additional_properties: #{get_additional_properties}>"
    end
  end
end
