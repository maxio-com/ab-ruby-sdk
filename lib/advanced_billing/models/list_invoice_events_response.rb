# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AdvancedBilling
  # ListInvoiceEventsResponse Model.
  class ListInvoiceEventsResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[Object]]
    attr_accessor :events

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :page

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :per_page

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :total_pages

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['events'] = 'events'
      @_hash['page'] = 'page'
      @_hash['per_page'] = 'per_page'
      @_hash['total_pages'] = 'total_pages'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        events
        page
        per_page
        total_pages
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(events: SKIP, page: SKIP, per_page: SKIP, total_pages: SKIP,
                   additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @events = events unless events == SKIP
      @page = page unless page == SKIP
      @per_page = per_page unless per_page == SKIP
      @total_pages = total_pages unless total_pages == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      events = hash.key?('events') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:InvoiceEvent), hash['events']
      ) : SKIP
      page = hash.key?('page') ? hash['page'] : SKIP
      per_page = hash.key?('per_page') ? hash['per_page'] : SKIP
      total_pages = hash.key?('total_pages') ? hash['total_pages'] : SKIP

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      ListInvoiceEventsResponse.new(events: events,
                                    page: page,
                                    per_page: per_page,
                                    total_pages: total_pages,
                                    additional_properties: additional_properties)
    end

    # Validates an instance of the object from a given value.
    # @param [ListInvoiceEventsResponse | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} events: #{@events}, page: #{@page}, per_page: #{@per_page}, total_pages:"\
      " #{@total_pages}, additional_properties: #{get_additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} events: #{@events.inspect}, page: #{@page.inspect}, per_page:"\
      " #{@per_page.inspect}, total_pages: #{@total_pages.inspect}, additional_properties:"\
      " #{get_additional_properties}>"
    end
  end
end
