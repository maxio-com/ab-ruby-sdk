# advanced_billing
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module AdvancedBilling
  # ProformaInvoiceIssued Model.
  class ProformaInvoiceIssued < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :uid

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :role

    # TODO: Write general description for this method
    # @return [Date]
    attr_accessor :delivery_date

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :due_amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :paid_amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :tax_amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :total_amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :product_name

    # TODO: Write general description for this method
    # @return [Array[InvoiceLineItemEventData]]
    attr_accessor :line_items

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['uid'] = 'uid'
      @_hash['number'] = 'number'
      @_hash['role'] = 'role'
      @_hash['delivery_date'] = 'delivery_date'
      @_hash['created_at'] = 'created_at'
      @_hash['due_amount'] = 'due_amount'
      @_hash['paid_amount'] = 'paid_amount'
      @_hash['tax_amount'] = 'tax_amount'
      @_hash['total_amount'] = 'total_amount'
      @_hash['product_name'] = 'product_name'
      @_hash['line_items'] = 'line_items'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(uid:, number:, role:, delivery_date:, created_at:,
                   due_amount:, paid_amount:, tax_amount:, total_amount:,
                   product_name:, line_items:, additional_properties: {})
      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      @uid = uid
      @number = number
      @role = role
      @delivery_date = delivery_date
      @created_at = created_at
      @due_amount = due_amount
      @paid_amount = paid_amount
      @tax_amount = tax_amount
      @total_amount = total_amount
      @product_name = product_name
      @line_items = line_items
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      uid = hash.key?('uid') ? hash['uid'] : nil
      number = hash.key?('number') ? hash['number'] : nil
      role = hash.key?('role') ? hash['role'] : nil
      delivery_date = hash.key?('delivery_date') ? hash['delivery_date'] : nil
      created_at = if hash.key?('created_at')
                     (DateTimeHelper.from_rfc3339(hash['created_at']) if hash['created_at'])
                   end
      due_amount = hash.key?('due_amount') ? hash['due_amount'] : nil
      paid_amount = hash.key?('paid_amount') ? hash['paid_amount'] : nil
      tax_amount = hash.key?('tax_amount') ? hash['tax_amount'] : nil
      total_amount = hash.key?('total_amount') ? hash['total_amount'] : nil
      product_name = hash.key?('product_name') ? hash['product_name'] : nil
      # Parameter is an array, so we need to iterate through it
      line_items = nil
      unless hash['line_items'].nil?
        line_items = []
        hash['line_items'].each do |structure|
          line_items << (InvoiceLineItemEventData.from_hash(structure) if structure)
        end
      end

      line_items = nil unless hash.key?('line_items')

      # Clean out expected properties from Hash.
      additional_properties = hash.reject { |k, _| names.value?(k) }

      # Create object from extracted values.
      ProformaInvoiceIssued.new(uid: uid,
                                number: number,
                                role: role,
                                delivery_date: delivery_date,
                                created_at: created_at,
                                due_amount: due_amount,
                                paid_amount: paid_amount,
                                tax_amount: tax_amount,
                                total_amount: total_amount,
                                product_name: product_name,
                                line_items: line_items,
                                additional_properties: additional_properties)
    end

    def to_custom_created_at
      DateTimeHelper.to_rfc3339(created_at)
    end

    # Validates an instance of the object from a given value.
    # @param [ProformaInvoiceIssued | Hash] The value against the validation is performed.
    def self.validate(value)
      if value.instance_of? self
        return (
          APIHelper.valid_type?(value.uid,
                                ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.number,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.role,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.delivery_date,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.created_at,
                                  ->(val) { val.instance_of? DateTime }) and
            APIHelper.valid_type?(value.due_amount,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.paid_amount,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.tax_amount,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.total_amount,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.product_name,
                                  ->(val) { val.instance_of? String }) and
            APIHelper.valid_type?(value.line_items,
                                  ->(val) { InvoiceLineItemEventData.validate(val) },
                                  is_model_hash: true,
                                  is_inner_model_hash: true)
        )
      end

      return false unless value.instance_of? Hash

      (
        APIHelper.valid_type?(value['uid'],
                              ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['number'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['role'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['delivery_date'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['created_at'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['due_amount'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['paid_amount'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['tax_amount'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['total_amount'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['product_name'],
                                ->(val) { val.instance_of? String }) and
          APIHelper.valid_type?(value['line_items'],
                                ->(val) { InvoiceLineItemEventData.validate(val) },
                                is_model_hash: true,
                                is_inner_model_hash: true)
      )
    end
  end
end
