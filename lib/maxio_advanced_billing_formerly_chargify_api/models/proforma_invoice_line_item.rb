# maxio_advanced_billing_formerly_chargify_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MaxioAdvancedBillingFormerlyChargifyApi
  # ProformaInvoiceLineItem Model.
  class ProformaInvoiceLineItem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :uid

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :quantity

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :unit_price

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :subtotal_amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :discount_amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :tax_amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :total_amount

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :tiered_unit_price

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :period_range_start

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :period_range_end

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :product_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :product_version

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :product_price_point_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :component_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :price_point_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['uid'] = 'uid'
      @_hash['title'] = 'title'
      @_hash['description'] = 'description'
      @_hash['quantity'] = 'quantity'
      @_hash['unit_price'] = 'unit_price'
      @_hash['subtotal_amount'] = 'subtotal_amount'
      @_hash['discount_amount'] = 'discount_amount'
      @_hash['tax_amount'] = 'tax_amount'
      @_hash['total_amount'] = 'total_amount'
      @_hash['tiered_unit_price'] = 'tiered_unit_price'
      @_hash['period_range_start'] = 'period_range_start'
      @_hash['period_range_end'] = 'period_range_end'
      @_hash['product_id'] = 'product_id'
      @_hash['product_version'] = 'product_version'
      @_hash['product_price_point_id'] = 'product_price_point_id'
      @_hash['component_id'] = 'component_id'
      @_hash['price_point_id'] = 'price_point_id'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        uid
        title
        description
        quantity
        unit_price
        subtotal_amount
        discount_amount
        tax_amount
        total_amount
        tiered_unit_price
        period_range_start
        period_range_end
        product_id
        product_version
        product_price_point_id
        component_id
        price_point_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        component_id
        price_point_id
      ]
    end

    def initialize(uid = SKIP,
                   title = SKIP,
                   description = SKIP,
                   quantity = SKIP,
                   unit_price = SKIP,
                   subtotal_amount = SKIP,
                   discount_amount = SKIP,
                   tax_amount = SKIP,
                   total_amount = SKIP,
                   tiered_unit_price = SKIP,
                   period_range_start = SKIP,
                   period_range_end = SKIP,
                   product_id = SKIP,
                   product_version = SKIP,
                   product_price_point_id = SKIP,
                   component_id = SKIP,
                   price_point_id = SKIP)
      @uid = uid unless uid == SKIP
      @title = title unless title == SKIP
      @description = description unless description == SKIP
      @quantity = quantity unless quantity == SKIP
      @unit_price = unit_price unless unit_price == SKIP
      @subtotal_amount = subtotal_amount unless subtotal_amount == SKIP
      @discount_amount = discount_amount unless discount_amount == SKIP
      @tax_amount = tax_amount unless tax_amount == SKIP
      @total_amount = total_amount unless total_amount == SKIP
      @tiered_unit_price = tiered_unit_price unless tiered_unit_price == SKIP
      @period_range_start = period_range_start unless period_range_start == SKIP
      @period_range_end = period_range_end unless period_range_end == SKIP
      @product_id = product_id unless product_id == SKIP
      @product_version = product_version unless product_version == SKIP
      @product_price_point_id = product_price_point_id unless product_price_point_id == SKIP
      @component_id = component_id unless component_id == SKIP
      @price_point_id = price_point_id unless price_point_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      uid = hash.key?('uid') ? hash['uid'] : SKIP
      title = hash.key?('title') ? hash['title'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      quantity = hash.key?('quantity') ? hash['quantity'] : SKIP
      unit_price = hash.key?('unit_price') ? hash['unit_price'] : SKIP
      subtotal_amount =
        hash.key?('subtotal_amount') ? hash['subtotal_amount'] : SKIP
      discount_amount =
        hash.key?('discount_amount') ? hash['discount_amount'] : SKIP
      tax_amount = hash.key?('tax_amount') ? hash['tax_amount'] : SKIP
      total_amount = hash.key?('total_amount') ? hash['total_amount'] : SKIP
      tiered_unit_price =
        hash.key?('tiered_unit_price') ? hash['tiered_unit_price'] : SKIP
      period_range_start =
        hash.key?('period_range_start') ? hash['period_range_start'] : SKIP
      period_range_end =
        hash.key?('period_range_end') ? hash['period_range_end'] : SKIP
      product_id = hash.key?('product_id') ? hash['product_id'] : SKIP
      product_version =
        hash.key?('product_version') ? hash['product_version'] : SKIP
      product_price_point_id =
        hash.key?('product_price_point_id') ? hash['product_price_point_id'] : SKIP
      component_id = hash.key?('component_id') ? hash['component_id'] : SKIP
      price_point_id =
        hash.key?('price_point_id') ? hash['price_point_id'] : SKIP

      # Create object from extracted values.
      ProformaInvoiceLineItem.new(uid,
                                  title,
                                  description,
                                  quantity,
                                  unit_price,
                                  subtotal_amount,
                                  discount_amount,
                                  tax_amount,
                                  total_amount,
                                  tiered_unit_price,
                                  period_range_start,
                                  period_range_end,
                                  product_id,
                                  product_version,
                                  product_price_point_id,
                                  component_id,
                                  price_point_id)
    end
  end
end
