# maxio_advanced_billing_formerly_chargify_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MaxioAdvancedBillingFormerlyChargifyApi
  # CreateComponentPrice Model.
  class CreateComponentPrice < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :starting_quantity

    # The price can contain up to 8 decimal places. i.e. 1.00 or 0.0012 or
    # 0.00000065
    # @return [Object]
    attr_accessor :unit_price

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['starting_quantity'] = 'starting_quantity'
      @_hash['unit_price'] = 'unit_price'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        starting_quantity
        unit_price
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(starting_quantity = SKIP,
                   unit_price = SKIP)
      @starting_quantity = starting_quantity unless starting_quantity == SKIP
      @unit_price = unit_price unless unit_price == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      starting_quantity =
        hash.key?('starting_quantity') ? hash['starting_quantity'] : SKIP
      unit_price = hash.key?('unit_price') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:CreateComponentPriceUnitPrice), hash['unit_price']
      ) : SKIP

      # Create object from extracted values.
      CreateComponentPrice.new(starting_quantity,
                               unit_price)
    end

    # Validates an instance of the object from a given value.
    # @param [CreateComponentPrice | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end
  end
end
